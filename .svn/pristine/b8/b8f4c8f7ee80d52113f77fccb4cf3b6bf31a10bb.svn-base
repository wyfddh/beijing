package com.tj720.admin.dao.map;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.tj720.admin.model.MipToorCollection;
import com.tj720.admin.model.MipTour;
import com.tj720.mip.dto.BjMuseumBaseInfo;
import com.tj720.mip.dto.BjMuseumBaseInfoExample;
import com.tj720.mip.dto.EveryDayMuseumDto;

public interface BjMuseumBaseInfoMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	long countByExample(BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int deleteByExample(BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int insert(BjMuseumBaseInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int insertSelective(BjMuseumBaseInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	List<BjMuseumBaseInfo> selectByExampleWithBLOBs(BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	List<BjMuseumBaseInfo> selectByExample(BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	BjMuseumBaseInfo selectByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByExampleSelective(@Param("record") BjMuseumBaseInfo record,
			@Param("example") BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByExampleWithBLOBs(@Param("record") BjMuseumBaseInfo record,
			@Param("example") BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByExample(@Param("record") BjMuseumBaseInfo record, @Param("example") BjMuseumBaseInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByPrimaryKeySelective(BjMuseumBaseInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByPrimaryKeyWithBLOBs(BjMuseumBaseInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table bj_museum_base_info
	 * @mbg.generated  Mon Jul 09 14:56:54 CST 2018
	 */
	int updateByPrimaryKey(BjMuseumBaseInfo record);
	/**
	 * 查询博物馆列表
	 * @return
	 */
	List<Map<String, Object>> getBjMuseumBaseInfoList();
	/**
	 * 查询博物馆详细资料
	 * @param museumId 博物馆ID
	 * @return
	 */
	Map<String, Object> getBjMuseumBaseInfoByMuseumId(@Param("museumId") String museumId, @Param("userid") String userid);
	/**
	 * 查询博物馆藏品列表
	 * @param museumId 博物馆ID
	 * @return
	 */
	List<Map<String, Object>> getBjMuseumCollectionByMuseumId(@Param("museumId") String museumId,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
	
	Integer countBjMuseumCollectionByMuseumId(@Param("museumId") String museumId);
	/**
	 * 查询博物馆藏品列表
	 * @param museumId 博物馆ID
	 * @return
	 */
	List<Map<String, Object>> getBjMuseumCollectionByMuseumId(@Param("museumId") String museumId,@Param("type") String type,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
	
	Integer countBjMuseumCollectionByMuseumId(@Param("museumId") String museumId,@Param("type") String type);
	/**
	 * 获取博物馆交通信息
	 * @param museumId 博物馆ID
	 * @return
	 */
	Map<String, Object> getMuseumInformationByMuseumId(String museumId);
	
	Map<String, Object> getBjMuseumCountAndUserCount();
	
	//首页轮播图
	List<Map<String, Object>> getIndexCarousels(@Param("carouselPositionId")String  carouselPositionId);
	//博物馆九宫格图
	List<Map<String, Object>> getBjMuseumImageList(@Param("museumId") String museumId,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
	
	//博物馆九宫格图统计
	Integer countBjMuseumImageList(@Param("museumId") String museumId);
	
	 //条件搜索展览
    Integer countBjMuseumSpreadtrumByMuseumId(@Param("museumId") String museumId,@Param("type") String type);
  //条件搜索展览
    List<Map<String, Object>> getBjMuseumSpreadtrumByMuseumId(@Param("museumId") String museumId,@Param("type") String type,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
    
    List<Map<String, Object>> getBjMuseumConditionList(@Param("area") String area,@Param("name") String name);
    
    /**
     * 根据博物馆id，获取虚拟展厅数据
     * @param orgId
     * @return
     */
    List<Map<String, Object>> getVirtualByMuseumId(@Param("orgId") String orgId);
    
    /**
     * 根据栏目唯一名称，获取文章信息
     * @param uniqueName
     * @param orgId
     * @return
     */
    List<Map<String, Object>> getArticleByUniqueName(@Param("uniqueName") String uniqueName, @Param("orgId") String orgId, @Param("size") Integer size);
    
    /**
     * 根据名称搜索，或者根据区域搜索博物馆列表
     * @param name
     * @param area
     * @return
     */
    List<Map<String, Object>> getMuseumListByAreaAndKey(@Param("name") String name, @Param("area") String area,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
    /**
     * 根据名称搜索，或者根据区域搜索博物馆列表-数量
     * @param name
     * @param area
     * @return
     */
    int countMuseumListByAreaAndKey(@Param("name") String name, @Param("area") String area);
    
    /**
     * 根据博物馆id查询博物馆藏品分类
     * @param orgId
     * @return
     */
    List<Map<String, Object>> getCollectionTypeByMuseum(@Param("orgId") String orgId);

	List<EveryDayMuseumDto> getEveryDayMuseumList();

	EveryDayMuseumDto getEveryDayMuseumSpr(@Param("orgId")String orgId);

	EveryDayMuseumDto getEveryDayMuseumColl(@Param("orgId")String orgId);
	
	Integer insertUserCount(@Param("type")String type,@Param("count")Integer count);
	
	Integer setUserCount(@Param("type")String type,@Param("count")Integer count);
	
	Integer getUserCount(@Param("type")String type);
	
	//移动端取语音导览列表
	List<MipTour> getTourListByMuseumId(String museumId);
	
	//移动端接口查导览详情接口
	MipTour getTourDetail(String id);

	//移动端茶导览的语音和图片列表接口
	List<MipToorCollection> getTourCollectionList(Map<String,Object> map);

	//移动端茶导览图片列表接口
	List<MipToorCollection> getPictureList(String id);

	//移动端茶导览的藏品列表接口
	List<MipToorCollection> getCollectionList(String id);
}