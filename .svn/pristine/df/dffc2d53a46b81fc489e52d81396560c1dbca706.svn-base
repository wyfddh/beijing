<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tj720.admin.dao.map.MipOpenFossilInfoStaticMapper">
  <resultMap id="BaseResultMap" type="com.tj720.admin.model.MipOpenFossilInfoStatic">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="collection_unit" jdbcType="VARCHAR" property="collectionUnit" />
    <result column="dwid" jdbcType="VARCHAR" property="dwid" />
    <result column="gs_No" jdbcType="VARCHAR" property="gsNo" />
    <result column="fPic" jdbcType="VARCHAR" property="fpic" />
    <result column="fPic_width" jdbcType="INTEGER" property="fpicWidth" />
    <result column="fPic_height" jdbcType="INTEGER" property="fpicHeight" />
    <result column="gs_collectionsNo_type" jdbcType="VARCHAR" property="gsCollectionsnoType" />
    <result column="gs_collectionsNo" jdbcType="VARCHAR" property="gsCollectionsno" />
    <result column="collection_type" jdbcType="VARCHAR" property="collectionType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="formerly" jdbcType="VARCHAR" property="formerly" />
    <result column="foreign_name" jdbcType="VARCHAR" property="foreignName" />
    <result column="year_type_eon" jdbcType="VARCHAR" property="yearTypeEon" />
    <result column="year_type_era" jdbcType="VARCHAR" property="yearTypeEra" />
    <result column="year_type_epoch" jdbcType="VARCHAR" property="yearTypeEpoch" />
    <result column="year_type" jdbcType="VARCHAR" property="yearType" />
    <result column="gs_specific_year" jdbcType="VARCHAR" property="gsSpecificYear" />
    <result column="collections_category" jdbcType="VARCHAR" property="collectionsCategory" />
    <result column="gs_texture_category" jdbcType="VARCHAR" property="gsTextureCategory" />
    <result column="gs_texture_subcategories" jdbcType="VARCHAR" property="gsTextureSubcategories" />
    <result column="gs_texture" jdbcType="VARCHAR" property="gsTexture" />
    <result column="actual_quantity_unit" jdbcType="VARCHAR" property="actualQuantityUnit" />
    <result column="actual_quantity" jdbcType="REAL" property="actualQuantity" />
    <result column="gs_length" jdbcType="REAL" property="gsLength" />
    <result column="gs_width" jdbcType="REAL" property="gsWidth" />
    <result column="gs_height" jdbcType="REAL" property="gsHeight" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="mass_range" jdbcType="VARCHAR" property="massRange" />
    <result column="mass" jdbcType="VARCHAR" property="mass" />
    <result column="mass_unit" jdbcType="VARCHAR" property="massUnit" />
    <result column="collection_level" jdbcType="VARCHAR" property="collectionLevel" />
    <result column="gs_source" jdbcType="VARCHAR" property="gsSource" />
    <result column="collection_place" jdbcType="VARCHAR" property="collectionPlace" />
    <result column="end_residue_level" jdbcType="VARCHAR" property="endResidueLevel" />
    <result column="end_residual_condition" jdbcType="VARCHAR" property="endResidualCondition" />
    <result column="gs_storage_type" jdbcType="VARCHAR" property="gsStorageType" />
    <result column="gs_storage_state" jdbcType="VARCHAR" property="gsStorageState" />
    <result column="gs_entry_warehouse_time_frame" jdbcType="VARCHAR" property="gsEntryWarehouseTimeFrame" />
    <result column="gs_entry_warehouse_year" jdbcType="VARCHAR" property="gsEntryWarehouseYear" />
    <result column="gs_entry_warehouse_time" jdbcType="VARCHAR" property="gsEntryWarehouseTime" />
    <result column="gs_author" jdbcType="VARCHAR" property="gsAuthor" />
    <result column="gs_version" jdbcType="VARCHAR" property="gsVersion" />
    <result column="gs_keep_on_file" jdbcType="VARCHAR" property="gsKeepOnFile" />
    <result column="picture_ids" jdbcType="VARCHAR" property="pictureIds" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="is_high_quality" jdbcType="TINYINT" property="isHighQuality" />
    <result column="is_open" jdbcType="TINYINT" property="isOpen" />
    <result column="assessor" jdbcType="VARCHAR" property="assessor" />
    <result column="f_create_dept" jdbcType="VARCHAR" property="fCreateDept" />
    <result column="f_key" jdbcType="VARCHAR" property="fKey" />
    <result column="three_dimensional_collection" jdbcType="VARCHAR" property="threeDimensionalCollection" />
    <result column="ring_beat_data" jdbcType="VARCHAR" property="ringBeatData" />
    <result column="f_video" jdbcType="VARCHAR" property="fVideo" />
    <result column="f_audio" jdbcType="VARCHAR" property="fAudio" />
    <result column="f_museum_id" jdbcType="VARCHAR" property="fMuseumId" />
    <result column="check_state" jdbcType="TINYINT" property="checkState" />
    <result column="click_counts" jdbcType="INTEGER" property="clickCounts" />
    <result column="select_counts" jdbcType="INTEGER" property="selectCounts" />
    <result column="collected_counts" jdbcType="INTEGER" property="collectedCounts" />
    <result column="submitTime" jdbcType="TIMESTAMP" property="submittime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gj_open" jdbcType="TINYINT" property="gjOpen" />
    <result column="approval_id" jdbcType="VARCHAR" property="approvalId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tj720.admin.model.MipOpenFossilInfoStaticWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    id, collection_unit, dwid, gs_No, fPic, fPic_width, fPic_height, gs_collectionsNo_type, 
    gs_collectionsNo, collection_type, name, index_name, formerly, foreign_name, year_type_eon, 
    year_type_era, year_type_epoch, year_type, gs_specific_year, collections_category, 
    gs_texture_category, gs_texture_subcategories, gs_texture, actual_quantity_unit, 
    actual_quantity, gs_length, gs_width, gs_height, size, mass_range, mass, mass_unit, 
    collection_level, gs_source, collection_place, end_residue_level, end_residual_condition, 
    gs_storage_type, gs_storage_state, gs_entry_warehouse_time_frame, gs_entry_warehouse_year, 
    gs_entry_warehouse_time, gs_author, gs_version, gs_keep_on_file, picture_ids, creator, 
    is_high_quality, is_open, assessor, f_create_dept, f_key, three_dimensional_collection, 
    ring_beat_data, f_video, f_audio, f_museum_id, check_state, click_counts, select_counts, 
    collected_counts, submitTime, updated_time, createTime, sequence, status, gj_open, 
    approval_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    description, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mip_open_fossil_info_static
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mip_open_fossil_info_static
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    delete from mip_open_fossil_info_static
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    insert into mip_open_fossil_info_static (id, collection_unit, dwid, 
      gs_No, fPic, fPic_width, 
      fPic_height, gs_collectionsNo_type, gs_collectionsNo, 
      collection_type, name, index_name, 
      formerly, foreign_name, year_type_eon, 
      year_type_era, year_type_epoch, year_type, 
      gs_specific_year, collections_category, gs_texture_category, 
      gs_texture_subcategories, gs_texture, actual_quantity_unit, 
      actual_quantity, gs_length, gs_width, 
      gs_height, size, mass_range, 
      mass, mass_unit, collection_level, 
      gs_source, collection_place, end_residue_level, 
      end_residual_condition, gs_storage_type, gs_storage_state, 
      gs_entry_warehouse_time_frame, gs_entry_warehouse_year, 
      gs_entry_warehouse_time, gs_author, gs_version, 
      gs_keep_on_file, picture_ids, creator, 
      is_high_quality, is_open, assessor, 
      f_create_dept, f_key, three_dimensional_collection, 
      ring_beat_data, f_video, f_audio, 
      f_museum_id, check_state, click_counts, 
      select_counts, collected_counts, submitTime, 
      updated_time, createTime, sequence, 
      status, gj_open, approval_id, 
      description, remark)
    values (#{id,jdbcType=VARCHAR}, #{collectionUnit,jdbcType=VARCHAR}, #{dwid,jdbcType=VARCHAR}, 
      #{gsNo,jdbcType=VARCHAR}, #{fpic,jdbcType=VARCHAR}, #{fpicWidth,jdbcType=INTEGER}, 
      #{fpicHeight,jdbcType=INTEGER}, #{gsCollectionsnoType,jdbcType=VARCHAR}, #{gsCollectionsno,jdbcType=VARCHAR}, 
      #{collectionType,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{formerly,jdbcType=VARCHAR}, #{foreignName,jdbcType=VARCHAR}, #{yearTypeEon,jdbcType=VARCHAR}, 
      #{yearTypeEra,jdbcType=VARCHAR}, #{yearTypeEpoch,jdbcType=VARCHAR}, #{yearType,jdbcType=VARCHAR}, 
      #{gsSpecificYear,jdbcType=VARCHAR}, #{collectionsCategory,jdbcType=VARCHAR}, #{gsTextureCategory,jdbcType=VARCHAR}, 
      #{gsTextureSubcategories,jdbcType=VARCHAR}, #{gsTexture,jdbcType=VARCHAR}, #{actualQuantityUnit,jdbcType=VARCHAR}, 
      #{actualQuantity,jdbcType=REAL}, #{gsLength,jdbcType=REAL}, #{gsWidth,jdbcType=REAL}, 
      #{gsHeight,jdbcType=REAL}, #{size,jdbcType=VARCHAR}, #{massRange,jdbcType=VARCHAR}, 
      #{mass,jdbcType=VARCHAR}, #{massUnit,jdbcType=VARCHAR}, #{collectionLevel,jdbcType=VARCHAR}, 
      #{gsSource,jdbcType=VARCHAR}, #{collectionPlace,jdbcType=VARCHAR}, #{endResidueLevel,jdbcType=VARCHAR}, 
      #{endResidualCondition,jdbcType=VARCHAR}, #{gsStorageType,jdbcType=VARCHAR}, #{gsStorageState,jdbcType=VARCHAR}, 
      #{gsEntryWarehouseTimeFrame,jdbcType=VARCHAR}, #{gsEntryWarehouseYear,jdbcType=VARCHAR}, 
      #{gsEntryWarehouseTime,jdbcType=VARCHAR}, #{gsAuthor,jdbcType=VARCHAR}, #{gsVersion,jdbcType=VARCHAR}, 
      #{gsKeepOnFile,jdbcType=VARCHAR}, #{pictureIds,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{isHighQuality,jdbcType=TINYINT}, #{isOpen,jdbcType=TINYINT}, #{assessor,jdbcType=VARCHAR}, 
      #{fCreateDept,jdbcType=VARCHAR}, #{fKey,jdbcType=VARCHAR}, #{threeDimensionalCollection,jdbcType=VARCHAR}, 
      #{ringBeatData,jdbcType=VARCHAR}, #{fVideo,jdbcType=VARCHAR}, #{fAudio,jdbcType=VARCHAR}, 
      #{fMuseumId,jdbcType=VARCHAR}, #{checkState,jdbcType=TINYINT}, #{clickCounts,jdbcType=INTEGER}, 
      #{selectCounts,jdbcType=INTEGER}, #{collectedCounts,jdbcType=INTEGER}, #{submittime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{sequence,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{gjOpen,jdbcType=TINYINT}, #{approvalId,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    insert into mip_open_fossil_info_static
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectionUnit != null">
        collection_unit,
      </if>
      <if test="dwid != null">
        dwid,
      </if>
      <if test="gsNo != null">
        gs_No,
      </if>
      <if test="fpic != null">
        fPic,
      </if>
      <if test="fpicWidth != null">
        fPic_width,
      </if>
      <if test="fpicHeight != null">
        fPic_height,
      </if>
      <if test="gsCollectionsnoType != null">
        gs_collectionsNo_type,
      </if>
      <if test="gsCollectionsno != null">
        gs_collectionsNo,
      </if>
      <if test="collectionType != null">
        collection_type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="formerly != null">
        formerly,
      </if>
      <if test="foreignName != null">
        foreign_name,
      </if>
      <if test="yearTypeEon != null">
        year_type_eon,
      </if>
      <if test="yearTypeEra != null">
        year_type_era,
      </if>
      <if test="yearTypeEpoch != null">
        year_type_epoch,
      </if>
      <if test="yearType != null">
        year_type,
      </if>
      <if test="gsSpecificYear != null">
        gs_specific_year,
      </if>
      <if test="collectionsCategory != null">
        collections_category,
      </if>
      <if test="gsTextureCategory != null">
        gs_texture_category,
      </if>
      <if test="gsTextureSubcategories != null">
        gs_texture_subcategories,
      </if>
      <if test="gsTexture != null">
        gs_texture,
      </if>
      <if test="actualQuantityUnit != null">
        actual_quantity_unit,
      </if>
      <if test="actualQuantity != null">
        actual_quantity,
      </if>
      <if test="gsLength != null">
        gs_length,
      </if>
      <if test="gsWidth != null">
        gs_width,
      </if>
      <if test="gsHeight != null">
        gs_height,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="massRange != null">
        mass_range,
      </if>
      <if test="mass != null">
        mass,
      </if>
      <if test="massUnit != null">
        mass_unit,
      </if>
      <if test="collectionLevel != null">
        collection_level,
      </if>
      <if test="gsSource != null">
        gs_source,
      </if>
      <if test="collectionPlace != null">
        collection_place,
      </if>
      <if test="endResidueLevel != null">
        end_residue_level,
      </if>
      <if test="endResidualCondition != null">
        end_residual_condition,
      </if>
      <if test="gsStorageType != null">
        gs_storage_type,
      </if>
      <if test="gsStorageState != null">
        gs_storage_state,
      </if>
      <if test="gsEntryWarehouseTimeFrame != null">
        gs_entry_warehouse_time_frame,
      </if>
      <if test="gsEntryWarehouseYear != null">
        gs_entry_warehouse_year,
      </if>
      <if test="gsEntryWarehouseTime != null">
        gs_entry_warehouse_time,
      </if>
      <if test="gsAuthor != null">
        gs_author,
      </if>
      <if test="gsVersion != null">
        gs_version,
      </if>
      <if test="gsKeepOnFile != null">
        gs_keep_on_file,
      </if>
      <if test="pictureIds != null">
        picture_ids,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="isHighQuality != null">
        is_high_quality,
      </if>
      <if test="isOpen != null">
        is_open,
      </if>
      <if test="assessor != null">
        assessor,
      </if>
      <if test="fCreateDept != null">
        f_create_dept,
      </if>
      <if test="fKey != null">
        f_key,
      </if>
      <if test="threeDimensionalCollection != null">
        three_dimensional_collection,
      </if>
      <if test="ringBeatData != null">
        ring_beat_data,
      </if>
      <if test="fVideo != null">
        f_video,
      </if>
      <if test="fAudio != null">
        f_audio,
      </if>
      <if test="fMuseumId != null">
        f_museum_id,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
      <if test="clickCounts != null">
        click_counts,
      </if>
      <if test="selectCounts != null">
        select_counts,
      </if>
      <if test="collectedCounts != null">
        collected_counts,
      </if>
      <if test="submittime != null">
        submitTime,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gjOpen != null">
        gj_open,
      </if>
      <if test="approvalId != null">
        approval_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="collectionUnit != null">
        #{collectionUnit,jdbcType=VARCHAR},
      </if>
      <if test="dwid != null">
        #{dwid,jdbcType=VARCHAR},
      </if>
      <if test="gsNo != null">
        #{gsNo,jdbcType=VARCHAR},
      </if>
      <if test="fpic != null">
        #{fpic,jdbcType=VARCHAR},
      </if>
      <if test="fpicWidth != null">
        #{fpicWidth,jdbcType=INTEGER},
      </if>
      <if test="fpicHeight != null">
        #{fpicHeight,jdbcType=INTEGER},
      </if>
      <if test="gsCollectionsnoType != null">
        #{gsCollectionsnoType,jdbcType=VARCHAR},
      </if>
      <if test="gsCollectionsno != null">
        #{gsCollectionsno,jdbcType=VARCHAR},
      </if>
      <if test="collectionType != null">
        #{collectionType,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="formerly != null">
        #{formerly,jdbcType=VARCHAR},
      </if>
      <if test="foreignName != null">
        #{foreignName,jdbcType=VARCHAR},
      </if>
      <if test="yearTypeEon != null">
        #{yearTypeEon,jdbcType=VARCHAR},
      </if>
      <if test="yearTypeEra != null">
        #{yearTypeEra,jdbcType=VARCHAR},
      </if>
      <if test="yearTypeEpoch != null">
        #{yearTypeEpoch,jdbcType=VARCHAR},
      </if>
      <if test="yearType != null">
        #{yearType,jdbcType=VARCHAR},
      </if>
      <if test="gsSpecificYear != null">
        #{gsSpecificYear,jdbcType=VARCHAR},
      </if>
      <if test="collectionsCategory != null">
        #{collectionsCategory,jdbcType=VARCHAR},
      </if>
      <if test="gsTextureCategory != null">
        #{gsTextureCategory,jdbcType=VARCHAR},
      </if>
      <if test="gsTextureSubcategories != null">
        #{gsTextureSubcategories,jdbcType=VARCHAR},
      </if>
      <if test="gsTexture != null">
        #{gsTexture,jdbcType=VARCHAR},
      </if>
      <if test="actualQuantityUnit != null">
        #{actualQuantityUnit,jdbcType=VARCHAR},
      </if>
      <if test="actualQuantity != null">
        #{actualQuantity,jdbcType=REAL},
      </if>
      <if test="gsLength != null">
        #{gsLength,jdbcType=REAL},
      </if>
      <if test="gsWidth != null">
        #{gsWidth,jdbcType=REAL},
      </if>
      <if test="gsHeight != null">
        #{gsHeight,jdbcType=REAL},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="massRange != null">
        #{massRange,jdbcType=VARCHAR},
      </if>
      <if test="mass != null">
        #{mass,jdbcType=VARCHAR},
      </if>
      <if test="massUnit != null">
        #{massUnit,jdbcType=VARCHAR},
      </if>
      <if test="collectionLevel != null">
        #{collectionLevel,jdbcType=VARCHAR},
      </if>
      <if test="gsSource != null">
        #{gsSource,jdbcType=VARCHAR},
      </if>
      <if test="collectionPlace != null">
        #{collectionPlace,jdbcType=VARCHAR},
      </if>
      <if test="endResidueLevel != null">
        #{endResidueLevel,jdbcType=VARCHAR},
      </if>
      <if test="endResidualCondition != null">
        #{endResidualCondition,jdbcType=VARCHAR},
      </if>
      <if test="gsStorageType != null">
        #{gsStorageType,jdbcType=VARCHAR},
      </if>
      <if test="gsStorageState != null">
        #{gsStorageState,jdbcType=VARCHAR},
      </if>
      <if test="gsEntryWarehouseTimeFrame != null">
        #{gsEntryWarehouseTimeFrame,jdbcType=VARCHAR},
      </if>
      <if test="gsEntryWarehouseYear != null">
        #{gsEntryWarehouseYear,jdbcType=VARCHAR},
      </if>
      <if test="gsEntryWarehouseTime != null">
        #{gsEntryWarehouseTime,jdbcType=VARCHAR},
      </if>
      <if test="gsAuthor != null">
        #{gsAuthor,jdbcType=VARCHAR},
      </if>
      <if test="gsVersion != null">
        #{gsVersion,jdbcType=VARCHAR},
      </if>
      <if test="gsKeepOnFile != null">
        #{gsKeepOnFile,jdbcType=VARCHAR},
      </if>
      <if test="pictureIds != null">
        #{pictureIds,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="isHighQuality != null">
        #{isHighQuality,jdbcType=TINYINT},
      </if>
      <if test="isOpen != null">
        #{isOpen,jdbcType=TINYINT},
      </if>
      <if test="assessor != null">
        #{assessor,jdbcType=VARCHAR},
      </if>
      <if test="fCreateDept != null">
        #{fCreateDept,jdbcType=VARCHAR},
      </if>
      <if test="fKey != null">
        #{fKey,jdbcType=VARCHAR},
      </if>
      <if test="threeDimensionalCollection != null">
        #{threeDimensionalCollection,jdbcType=VARCHAR},
      </if>
      <if test="ringBeatData != null">
        #{ringBeatData,jdbcType=VARCHAR},
      </if>
      <if test="fVideo != null">
        #{fVideo,jdbcType=VARCHAR},
      </if>
      <if test="fAudio != null">
        #{fAudio,jdbcType=VARCHAR},
      </if>
      <if test="fMuseumId != null">
        #{fMuseumId,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=TINYINT},
      </if>
      <if test="clickCounts != null">
        #{clickCounts,jdbcType=INTEGER},
      </if>
      <if test="selectCounts != null">
        #{selectCounts,jdbcType=INTEGER},
      </if>
      <if test="collectedCounts != null">
        #{collectedCounts,jdbcType=INTEGER},
      </if>
      <if test="submittime != null">
        #{submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gjOpen != null">
        #{gjOpen,jdbcType=TINYINT},
      </if>
      <if test="approvalId != null">
        #{approvalId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tj720.admin.model.MipOpenFossilInfoStaticExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    select count(*) from mip_open_fossil_info_static
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    update mip_open_fossil_info_static
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionUnit != null">
        collection_unit = #{record.collectionUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.dwid != null">
        dwid = #{record.dwid,jdbcType=VARCHAR},
      </if>
      <if test="record.gsNo != null">
        gs_No = #{record.gsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.fpic != null">
        fPic = #{record.fpic,jdbcType=VARCHAR},
      </if>
      <if test="record.fpicWidth != null">
        fPic_width = #{record.fpicWidth,jdbcType=INTEGER},
      </if>
      <if test="record.fpicHeight != null">
        fPic_height = #{record.fpicHeight,jdbcType=INTEGER},
      </if>
      <if test="record.gsCollectionsnoType != null">
        gs_collectionsNo_type = #{record.gsCollectionsnoType,jdbcType=VARCHAR},
      </if>
      <if test="record.gsCollectionsno != null">
        gs_collectionsNo = #{record.gsCollectionsno,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionType != null">
        collection_type = #{record.collectionType,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.formerly != null">
        formerly = #{record.formerly,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignName != null">
        foreign_name = #{record.foreignName,jdbcType=VARCHAR},
      </if>
      <if test="record.yearTypeEon != null">
        year_type_eon = #{record.yearTypeEon,jdbcType=VARCHAR},
      </if>
      <if test="record.yearTypeEra != null">
        year_type_era = #{record.yearTypeEra,jdbcType=VARCHAR},
      </if>
      <if test="record.yearTypeEpoch != null">
        year_type_epoch = #{record.yearTypeEpoch,jdbcType=VARCHAR},
      </if>
      <if test="record.yearType != null">
        year_type = #{record.yearType,jdbcType=VARCHAR},
      </if>
      <if test="record.gsSpecificYear != null">
        gs_specific_year = #{record.gsSpecificYear,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionsCategory != null">
        collections_category = #{record.collectionsCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.gsTextureCategory != null">
        gs_texture_category = #{record.gsTextureCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.gsTextureSubcategories != null">
        gs_texture_subcategories = #{record.gsTextureSubcategories,jdbcType=VARCHAR},
      </if>
      <if test="record.gsTexture != null">
        gs_texture = #{record.gsTexture,jdbcType=VARCHAR},
      </if>
      <if test="record.actualQuantityUnit != null">
        actual_quantity_unit = #{record.actualQuantityUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.actualQuantity != null">
        actual_quantity = #{record.actualQuantity,jdbcType=REAL},
      </if>
      <if test="record.gsLength != null">
        gs_length = #{record.gsLength,jdbcType=REAL},
      </if>
      <if test="record.gsWidth != null">
        gs_width = #{record.gsWidth,jdbcType=REAL},
      </if>
      <if test="record.gsHeight != null">
        gs_height = #{record.gsHeight,jdbcType=REAL},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.massRange != null">
        mass_range = #{record.massRange,jdbcType=VARCHAR},
      </if>
      <if test="record.mass != null">
        mass = #{record.mass,jdbcType=VARCHAR},
      </if>
      <if test="record.massUnit != null">
        mass_unit = #{record.massUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionLevel != null">
        collection_level = #{record.collectionLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.gsSource != null">
        gs_source = #{record.gsSource,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionPlace != null">
        collection_place = #{record.collectionPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.endResidueLevel != null">
        end_residue_level = #{record.endResidueLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.endResidualCondition != null">
        end_residual_condition = #{record.endResidualCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.gsStorageType != null">
        gs_storage_type = #{record.gsStorageType,jdbcType=VARCHAR},
      </if>
      <if test="record.gsStorageState != null">
        gs_storage_state = #{record.gsStorageState,jdbcType=VARCHAR},
      </if>
      <if test="record.gsEntryWarehouseTimeFrame != null">
        gs_entry_warehouse_time_frame = #{record.gsEntryWarehouseTimeFrame,jdbcType=VARCHAR},
      </if>
      <if test="record.gsEntryWarehouseYear != null">
        gs_entry_warehouse_year = #{record.gsEntryWarehouseYear,jdbcType=VARCHAR},
      </if>
      <if test="record.gsEntryWarehouseTime != null">
        gs_entry_warehouse_time = #{record.gsEntryWarehouseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.gsAuthor != null">
        gs_author = #{record.gsAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.gsVersion != null">
        gs_version = #{record.gsVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.gsKeepOnFile != null">
        gs_keep_on_file = #{record.gsKeepOnFile,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureIds != null">
        picture_ids = #{record.pictureIds,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.isHighQuality != null">
        is_high_quality = #{record.isHighQuality,jdbcType=TINYINT},
      </if>
      <if test="record.isOpen != null">
        is_open = #{record.isOpen,jdbcType=TINYINT},
      </if>
      <if test="record.assessor != null">
        assessor = #{record.assessor,jdbcType=VARCHAR},
      </if>
      <if test="record.fCreateDept != null">
        f_create_dept = #{record.fCreateDept,jdbcType=VARCHAR},
      </if>
      <if test="record.fKey != null">
        f_key = #{record.fKey,jdbcType=VARCHAR},
      </if>
      <if test="record.threeDimensionalCollection != null">
        three_dimensional_collection = #{record.threeDimensionalCollection,jdbcType=VARCHAR},
      </if>
      <if test="record.ringBeatData != null">
        ring_beat_data = #{record.ringBeatData,jdbcType=VARCHAR},
      </if>
      <if test="record.fVideo != null">
        f_video = #{record.fVideo,jdbcType=VARCHAR},
      </if>
      <if test="record.fAudio != null">
        f_audio = #{record.fAudio,jdbcType=VARCHAR},
      </if>
      <if test="record.fMuseumId != null">
        f_museum_id = #{record.fMuseumId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkState != null">
        check_state = #{record.checkState,jdbcType=TINYINT},
      </if>
      <if test="record.clickCounts != null">
        click_counts = #{record.clickCounts,jdbcType=INTEGER},
      </if>
      <if test="record.selectCounts != null">
        select_counts = #{record.selectCounts,jdbcType=INTEGER},
      </if>
      <if test="record.collectedCounts != null">
        collected_counts = #{record.collectedCounts,jdbcType=INTEGER},
      </if>
      <if test="record.submittime != null">
        submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sequence != null">
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gjOpen != null">
        gj_open = #{record.gjOpen,jdbcType=TINYINT},
      </if>
      <if test="record.approvalId != null">
        approval_id = #{record.approvalId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    update mip_open_fossil_info_static
    set id = #{record.id,jdbcType=VARCHAR},
      collection_unit = #{record.collectionUnit,jdbcType=VARCHAR},
      dwid = #{record.dwid,jdbcType=VARCHAR},
      gs_No = #{record.gsNo,jdbcType=VARCHAR},
      fPic = #{record.fpic,jdbcType=VARCHAR},
      fPic_width = #{record.fpicWidth,jdbcType=INTEGER},
      fPic_height = #{record.fpicHeight,jdbcType=INTEGER},
      gs_collectionsNo_type = #{record.gsCollectionsnoType,jdbcType=VARCHAR},
      gs_collectionsNo = #{record.gsCollectionsno,jdbcType=VARCHAR},
      collection_type = #{record.collectionType,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      formerly = #{record.formerly,jdbcType=VARCHAR},
      foreign_name = #{record.foreignName,jdbcType=VARCHAR},
      year_type_eon = #{record.yearTypeEon,jdbcType=VARCHAR},
      year_type_era = #{record.yearTypeEra,jdbcType=VARCHAR},
      year_type_epoch = #{record.yearTypeEpoch,jdbcType=VARCHAR},
      year_type = #{record.yearType,jdbcType=VARCHAR},
      gs_specific_year = #{record.gsSpecificYear,jdbcType=VARCHAR},
      collections_category = #{record.collectionsCategory,jdbcType=VARCHAR},
      gs_texture_category = #{record.gsTextureCategory,jdbcType=VARCHAR},
      gs_texture_subcategories = #{record.gsTextureSubcategories,jdbcType=VARCHAR},
      gs_texture = #{record.gsTexture,jdbcType=VARCHAR},
      actual_quantity_unit = #{record.actualQuantityUnit,jdbcType=VARCHAR},
      actual_quantity = #{record.actualQuantity,jdbcType=REAL},
      gs_length = #{record.gsLength,jdbcType=REAL},
      gs_width = #{record.gsWidth,jdbcType=REAL},
      gs_height = #{record.gsHeight,jdbcType=REAL},
      size = #{record.size,jdbcType=VARCHAR},
      mass_range = #{record.massRange,jdbcType=VARCHAR},
      mass = #{record.mass,jdbcType=VARCHAR},
      mass_unit = #{record.massUnit,jdbcType=VARCHAR},
      collection_level = #{record.collectionLevel,jdbcType=VARCHAR},
      gs_source = #{record.gsSource,jdbcType=VARCHAR},
      collection_place = #{record.collectionPlace,jdbcType=VARCHAR},
      end_residue_level = #{record.endResidueLevel,jdbcType=VARCHAR},
      end_residual_condition = #{record.endResidualCondition,jdbcType=VARCHAR},
      gs_storage_type = #{record.gsStorageType,jdbcType=VARCHAR},
      gs_storage_state = #{record.gsStorageState,jdbcType=VARCHAR},
      gs_entry_warehouse_time_frame = #{record.gsEntryWarehouseTimeFrame,jdbcType=VARCHAR},
      gs_entry_warehouse_year = #{record.gsEntryWarehouseYear,jdbcType=VARCHAR},
      gs_entry_warehouse_time = #{record.gsEntryWarehouseTime,jdbcType=VARCHAR},
      gs_author = #{record.gsAuthor,jdbcType=VARCHAR},
      gs_version = #{record.gsVersion,jdbcType=VARCHAR},
      gs_keep_on_file = #{record.gsKeepOnFile,jdbcType=VARCHAR},
      picture_ids = #{record.pictureIds,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      is_high_quality = #{record.isHighQuality,jdbcType=TINYINT},
      is_open = #{record.isOpen,jdbcType=TINYINT},
      assessor = #{record.assessor,jdbcType=VARCHAR},
      f_create_dept = #{record.fCreateDept,jdbcType=VARCHAR},
      f_key = #{record.fKey,jdbcType=VARCHAR},
      three_dimensional_collection = #{record.threeDimensionalCollection,jdbcType=VARCHAR},
      ring_beat_data = #{record.ringBeatData,jdbcType=VARCHAR},
      f_video = #{record.fVideo,jdbcType=VARCHAR},
      f_audio = #{record.fAudio,jdbcType=VARCHAR},
      f_museum_id = #{record.fMuseumId,jdbcType=VARCHAR},
      check_state = #{record.checkState,jdbcType=TINYINT},
      click_counts = #{record.clickCounts,jdbcType=INTEGER},
      select_counts = #{record.selectCounts,jdbcType=INTEGER},
      collected_counts = #{record.collectedCounts,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      gj_open = #{record.gjOpen,jdbcType=TINYINT},
      approval_id = #{record.approvalId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 10:32:11 CST 2019.
    -->
    update mip_open_fossil_info_static
    set id = #{record.id,jdbcType=VARCHAR},
      collection_unit = #{record.collectionUnit,jdbcType=VARCHAR},
      dwid = #{record.dwid,jdbcType=VARCHAR},
      gs_No = #{record.gsNo,jdbcType=VARCHAR},
      fPic = #{record.fpic,jdbcType=VARCHAR},
      fPic_width = #{record.fpicWidth,jdbcType=INTEGER},
      fPic_height = #{record.fpicHeight,jdbcType=INTEGER},
      gs_collectionsNo_type = #{record.gsCollectionsnoType,jdbcType=VARCHAR},
      gs_collectionsNo = #{record.gsCollectionsno,jdbcType=VARCHAR},
      collection_type = #{record.collectionType,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      formerly = #{record.formerly,jdbcType=VARCHAR},
      foreign_name = #{record.foreignName,jdbcType=VARCHAR},
      year_type_eon = #{record.yearTypeEon,jdbcType=VARCHAR},
      year_type_era = #{record.yearTypeEra,jdbcType=VARCHAR},
      year_type_epoch = #{record.yearTypeEpoch,jdbcType=VARCHAR},
      year_type = #{record.yearType,jdbcType=VARCHAR},
      gs_specific_year = #{record.gsSpecificYear,jdbcType=VARCHAR},
      collections_category = #{record.collectionsCategory,jdbcType=VARCHAR},
      gs_texture_category = #{record.gsTextureCategory,jdbcType=VARCHAR},
      gs_texture_subcategories = #{record.gsTextureSubcategories,jdbcType=VARCHAR},
      gs_texture = #{record.gsTexture,jdbcType=VARCHAR},
      actual_quantity_unit = #{record.actualQuantityUnit,jdbcType=VARCHAR},
      actual_quantity = #{record.actualQuantity,jdbcType=REAL},
      gs_length = #{record.gsLength,jdbcType=REAL},
      gs_width = #{record.gsWidth,jdbcType=REAL},
      gs_height = #{record.gsHeight,jdbcType=REAL},
      size = #{record.size,jdbcType=VARCHAR},
      mass_range = #{record.massRange,jdbcType=VARCHAR},
      mass = #{record.mass,jdbcType=VARCHAR},
      mass_unit = #{record.massUnit,jdbcType=VARCHAR},
      collection_level = #{record.collectionLevel,jdbcType=VARCHAR},
      gs_source = #{record.gsSource,jdbcType=VARCHAR},
      collection_place = #{record.collectionPlace,jdbcType=VARCHAR},
      end_residue_level = #{record.endResidueLevel,jdbcType=VARCHAR},
      end_residual_condition = #{record.endResidualCondition,jdbcType=VARCHAR},
      gs_storage_type = #{record.gsStorageType,jdbcType=VARCHAR},
      gs_storage_state = #{record.gsStorageState,jdbcType=VARCHAR},
      gs_entry_warehouse_time_frame = #{record.gsEntryWarehouseTimeFrame,jdbcType=VARCHAR},
      gs_entry_warehouse_year = #{record.gsEntryWarehouseYear,jdbcType=VARCHAR},
      gs_entry_warehouse_time = #{record.gsEntryWarehouseTime,jdbcType=VARCHAR},
      gs_author = #{record.gsAuthor,jdbcType=VARCHAR},
      gs_version = #{record.gsVersion,jdbcType=VARCHAR},
      gs_keep_on_file = #{record.gsKeepOnFile,jdbcType=VARCHAR},
      picture_ids = #{record.pictureIds,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      is_high_quality = #{record.isHighQuality,jdbcType=TINYINT},
      is_open = #{record.isOpen,jdbcType=TINYINT},
      assessor = #{record.assessor,jdbcType=VARCHAR},
      f_create_dept = #{record.fCreateDept,jdbcType=VARCHAR},
      f_key = #{record.fKey,jdbcType=VARCHAR},
      three_dimensional_collection = #{record.threeDimensionalCollection,jdbcType=VARCHAR},
      ring_beat_data = #{record.ringBeatData,jdbcType=VARCHAR},
      f_video = #{record.fVideo,jdbcType=VARCHAR},
      f_audio = #{record.fAudio,jdbcType=VARCHAR},
      f_museum_id = #{record.fMuseumId,jdbcType=VARCHAR},
      check_state = #{record.checkState,jdbcType=TINYINT},
      click_counts = #{record.clickCounts,jdbcType=INTEGER},
      select_counts = #{record.selectCounts,jdbcType=INTEGER},
      collected_counts = #{record.collectedCounts,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      gj_open = #{record.gjOpen,jdbcType=TINYINT},
      approval_id = #{record.approvalId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="countStaticData" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    select 
    count(1)
    from mip_open_fossil_info_static
    where 1=1
    <if test="collectionUnit != null and collectionUnit != ''">
        and collection_unit in (${collectionUnit})
    </if>
    <if test="yearTypeEon != null and yearTypeEon != ''">
        and year_type_eon = #{yearTypeEon}
    </if>
    <if test="yearTypeEra != null and yearTypeEra != ''">
        and year_type_era = #{yearTypeEra}
    </if>
    <if test="yearTypeEpoch != null and yearTypeEpoch != ''">
        and year_type_epoch = #{yearTypeEpoch}
    </if>
    <if test="collectionsCategory != null and collectionsCategory != ''">
        and collections_category = #{collectionsCategory}
    </if>
    <if test="collectionLevel != null and collectionLevel != ''">
        and collection_level in (${collectionLevel})
    </if>
    
    <if test="collectionPlace != null and collectionPlace != ''">
        and collection_place = #{collectionPlace}
    </if>
    <if test="isHighQuality != null and isHighQuality != ''">
        and is_high_quality = #{isHighQuality}
    </if>
    <if test="isOpen != null and isOpen != '' and isOpen!=0">
        and is_open = #{isOpen}
    </if>
    <if test="gjOpen != null and gjOpen != ''and gjOpen!=0">
        and gj_open = #{gjOpen}
    </if>
    <if test="gsTexture != null and gsTexture != ''">
        and gs_texture = #{gsTexture}
    </if>
    <if test="gsSource != null and gsSource != ''">
        and gs_source = #{gsSource}
    </if>
    <if test="gsEntryWarehouseTimeFrame != null and gsEntryWarehouseTimeFrame != ''">
        and gs_entry_warehouse_time_frame = #{gsEntryWarehouseTimeFrame}
    </if>
    <if test="key != null and key != ''">
        and 
        (name like concat('%',#{key},'%')
        or gs_no like concat('%',#{key},'%'))
    </if>
  </select>
  
  <select id="getStaticData" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mip_open_fossil_info_static
    where 1=1
    <if test="collectionUnit != null and collectionUnit != ''">
        and collection_unit in (${collectionUnit})
    </if>
    <if test="yearTypeEon != null and yearTypeEon != ''">
        and year_type_eon = #{yearTypeEon}
    </if>
    <if test="yearTypeEra != null and yearTypeEra != ''">
        and year_type_era = #{yearTypeEra}
    </if>
    <if test="yearTypeEpoch != null and yearTypeEpoch != ''">
        and year_type_epoch = #{yearTypeEpoch}
    </if>
    <if test="collectionsCategory != null and collectionsCategory != ''">
        and collections_category = #{collectionsCategory}
    </if>
    <if test="collectionLevel != null and collectionLevel != ''">
        and collection_level in (${collectionLevel})
    </if>
    
    <if test="collectionPlace != null and collectionPlace != ''">
        and collection_place = #{collectionPlace}
    </if>
    <if test="isHighQuality != null and isHighQuality != ''">
        and is_high_quality = #{isHighQuality}
    </if>
    <if test="isOpen != null and isOpen != '' and isOpen!=0">
        and is_open = #{isOpen}
    </if>
    <if test="gjOpen != null and gjOpen != ''and gjOpen!=0">
        and gj_open = #{gjOpen}
    </if>
    <if test="gsTexture != null and gsTexture != ''">
        and gs_texture = #{gsTexture}
    </if>
    <if test="gsSource != null and gsSource != ''">
        and gs_source = #{gsSource}
    </if>
    <if test="gsEntryWarehouseTimeFrame != null and gsEntryWarehouseTimeFrame != ''">
        and gs_entry_warehouse_time_frame = #{gsEntryWarehouseTimeFrame}
    </if>
    <if test="key != null and key != ''">
        and 
        (name like concat('%',#{key},'%')
        or gs_no like concat('%',#{key},'%'))
    </if>
    order by sequence desc,submitTime desc
    <if test=" startRow == -1">
        limit #{pageSize}
    </if>
    <if test=" startRow != -1">
        limit #{startRow},#{pageSize}
    </if>
  </select>
  <select id="getDetail" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from mip_open_fossil_info_static
    where id = #{id}
  </select>
</mapper>