<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tj720.admin.dao.map.MipTopicCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.tj720.admin.model.MipTopicCollection" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="topic_id" property="topicId" jdbcType="VARCHAR" />
    <result column="collection_id" property="collectionId" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="java.util.HashMap" id="topicMap">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="publish_org" property="publishOrg" jdbcType="VARCHAR" />
        <result column="publish_time" property="publishTime" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="label" property="label" jdbcType="VARCHAR" />
        <result column="exhibition_hall" property="exhibitionHall" jdbcType="VARCHAR" />
        <result column="start_time" property="startTime" jdbcType="VARCHAR" />
        <result column="end_time" property="endTime" jdbcType="VARCHAR" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
        <result column="icon_url" property="iconUrl" jdbcType="VARCHAR" />
        <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    id, topic_id, collection_id, sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tj720.admin.model.MipTopicCollectionExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mip_topic_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test=" size != 0">
    	<if test=" startPage == 0">
			limit #{size}
    	</if>
    	<if test=" startPage != 0">
			limit #{startPage},#{size}
    	</if>
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from mip_topic_collection
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    delete from mip_topic_collection
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tj720.admin.model.MipTopicCollectionExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    delete from mip_topic_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tj720.admin.model.MipTopicCollection" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    insert into mip_topic_collection (id, topic_id, collection_id, 
      sort)
    values (#{id,jdbcType=VARCHAR}, #{topicId,jdbcType=VARCHAR}, #{collectionId,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tj720.admin.model.MipTopicCollection" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    insert into mip_topic_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="topicId != null" >
        topic_id,
      </if>
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="topicId != null" >
        #{topicId,jdbcType=VARCHAR},
      </if>
      <if test="collectionId != null" >
        #{collectionId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tj720.admin.model.MipTopicCollectionExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    select count(*) from mip_topic_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    update mip_topic_collection
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.topicId != null" >
        topic_id = #{record.topicId,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionId != null" >
        collection_id = #{record.collectionId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    update mip_topic_collection
    set id = #{record.id,jdbcType=VARCHAR},
      topic_id = #{record.topicId,jdbcType=VARCHAR},
      collection_id = #{record.collectionId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.admin.model.MipTopicCollection" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    update mip_topic_collection
    <set >
      <if test="topicId != null" >
        topic_id = #{topicId,jdbcType=VARCHAR},
      </if>
      <if test="collectionId != null" >
        collection_id = #{collectionId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tj720.admin.model.MipTopicCollection" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 08 15:42:19 CST 2018.
    -->
    update mip_topic_collection
    set topic_id = #{topicId,jdbcType=VARCHAR},
      collection_id = #{collectionId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectListByTopicId" resultType="com.tj720.admin.dto.MipTopicCollectionDto" >
    select g.url, f.* from (select a.id as topicCollectionId, left(CONCAT(b.picture_ids,','), LOCATE(',',CONCAT(b.picture_ids,','))-1) as pictureId, a.topic_id as topicId, a.sort, b.id, b.gs_No as gsNo, b.name, e.`name` as collectionUnit,
    i.name as collectionLevel, c.`name` as yearType, d.`name` as collectionsCategory
    from mip_topic_collection a
    inner join mip_open_culturalrelic_info b on(a.collection_id=b.id)
    left join mip_year_type c on(b.year_type=c.id)
		left join mip_collection_category d on(d.id=b.collections_category)
		left join mip_organization e on(e.id=b.collection_unit)
		left join mip_collection_level i on(i.id = b.collection_level)
	    where 1=1
	    and a.topic_id = #{topicId}) f
	left join mip_picture g on(f.pictureId=g.id)
    order by f.sort
  </select>
  
  <select id="getMaxSort" resultType="java.lang.Integer" >
    select IFNULL(max(sort),0)  from mip_topic_collection 
    where topic_id = #{topicId,jdbcType=VARCHAR}
  </select>
  
  <insert id="batchSave" parameterType="java.util.List">
    insert into mip_topic_collection 
    	(id, topic_id, collection_id, sort)
    values
    <foreach collection="list" item="item" separator="," >
	   (#{item.id},
	   #{item.topicId},
	   #{item.collectionId},
	   #{item.sort})
	</foreach>
  </insert>
  
  <select id="selectTopicByCollection" resultType="com.tj720.admin.model.MipTopic" >
    select * from mip_topic b 
	where b.id in(
		select DISTINCT a.topic_id from mip_topic_collection a
		where a.collection_id = #{collectionId})
  </select>
   <select id="getCollectionTopicById" resultMap="topicMap">
        select t.*,z.name as orgname, 
        (select name from mip_topic_type where id = t.type) as typeName
        from mip_topic t,mip_organization z
        where t.id = #{id}  and t.publish_org = z.id
    </select>
    
    <delete id="deleteMipTopicCollection">
        delete from mip_topic_collection
        where topic_id = #{record.topicId}
        and collection_id = #{record.collectionId}
    </delete>
    
    <delete id="deleteByCollectionId">
        delete from mip_topic_collection
        where collection_id in
        <foreach collection="collectionIds" item="item" open="(" close=")" separator="," >
		   #{item}
		</foreach>
    </delete>
    
   <select id="getListByTopicIds" resultType="com.tj720.admin.dto.MipTopicCollectionDto">
        select DISTINCT b.id, left(CONCAT(b.picture_ids,','), LOCATE(',',CONCAT(b.picture_ids,','))-1) as pictureId, b.gs_No as gsNo, b.name, e.`name` as collectionUnit,
    f.name as collectionLevel, c.`name` as yearType, d.`name` as collectionsCategory
    from mip_open_culturalrelic_info b
		LEFT JOIN mip_topic_collection a on(b.id = a.collection_id)
    left join mip_year_type c on(b.year_type=c.id)
		left join mip_collection_category d on(d.id=b.collections_category)
		left join mip_organization e on(e.id=b.collection_unit)
		left join mip_collection_level f on(f.id = b.collection_level)
	    where 1=1
	    and a.topic_id in
	    <foreach collection="topicIds" item="item" open="(" close=")" separator="," >
		   #{item}
		</foreach>
    </select>
</mapper>