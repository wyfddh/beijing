<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tj720.admin.dao.map.CulturalRelicInfoMapper" >
  <resultMap id="BaseResultMap" type="com.tj720.admin.model.CulturalRelicInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="c_name" property="cName" jdbcType="VARCHAR" />
    <result column="c_properties" property="cProperties" jdbcType="VARCHAR" />
    <result column="aptitude_examine" property="aptitudeExamine" jdbcType="VARCHAR" />
    <result column="current_aptitude_year" property="currentAptitudeYear" jdbcType="VARCHAR" />
    <result column="aptitude_num" property="aptitudeNum" jdbcType="VARCHAR" />
    <result column="legal_representative" property="legalRepresentative" jdbcType="VARCHAR" />
    <result column="contacts_name" property="contactsName" jdbcType="VARCHAR" />
    <result column="contacts_phone" property="contactsPhone" jdbcType="VARCHAR" />
    <result column="facsimile" property="facsimile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="postalcode" property="postalcode" jdbcType="VARCHAR" />
    <result column="c_address" property="cAddress" jdbcType="VARCHAR" />
    <result column="c_management" property="cManagement" jdbcType="VARCHAR" />
    <result column="ratified_business_range" property="ratifiedBusinessRange" jdbcType="VARCHAR" />
    <result column="exist_business_range" property="existBusinessRange" jdbcType="VARCHAR" />
    <result column="business_range_ischange" property="businessRangeIschange" jdbcType="INTEGER" />
    <result column="change_year" property="changeYear" jdbcType="VARCHAR" />
    <result column="old_business_range" property="oldBusinessRange" jdbcType="VARCHAR" />
    <result column="new_business_range" property="newBusinessRange" jdbcType="VARCHAR" />
    <result column="repair_area" property="repairArea" jdbcType="DECIMAL" />
    <result column="office_area" property="officeArea" jdbcType="DECIMAL" />
    <result column="temporary_area" property="temporaryArea" jdbcType="DECIMAL" />
    <result column="total_area" property="totalArea" jdbcType="DECIMAL" />
    <result column="conform_workplace_equipment" property="conformWorkplaceEquipment" jdbcType="INTEGER" />
    <result column="conform_workplace" property="conformWorkplace" jdbcType="INTEGER" />
    <result column="exist_humiture_adjust" property="existHumitureAdjust" jdbcType="INTEGER" />
    <result column="exist_sewerage" property="existSewerage" jdbcType="INTEGER" />
    <result column="exist_scientific_base" property="existScientificBase" jdbcType="INTEGER" />
    <result column="exist_scientific_workstation" property="existScientificWorkstation" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="remake" property="remake" jdbcType="VARCHAR" />
    <result column="delete_mark" property="deleteMark" jdbcType="VARCHAR" />
    <result column="spare_data1" property="spareData1" jdbcType="VARCHAR" />
    <result column="spare_data2" property="spareData2" jdbcType="VARCHAR" />
    <result column="spare_data3" property="spareData3" jdbcType="VARCHAR" />
    <result column="office_number" jdbcType="INTEGER" property="officeNumber" />
    <result column="analysis_lab_number" jdbcType="INTEGER" property="analysisLabNumber" />
    <result column="analysis_lab_area" jdbcType="DECIMAL" property="analysisLabArea" />
    <result column="pretreatment_room" jdbcType="INTEGER" property="pretreatmentRoom" />
    <result column="pretreatment_room_area" jdbcType="DECIMAL" property="pretreatmentRoomArea" />
    <result column="chemical_lab_number" jdbcType="INTEGER" property="chemicalLabNumber" />
    <result column="chemical_lab_area" jdbcType="DECIMAL" property="chemicalLabArea" />
    <result column="cultural_relics_number" jdbcType="INTEGER" property="culturalRelicsNumber" />
    <result column="cultural_relics_area" jdbcType="DECIMAL" property="culturalRelicsArea" />
    <result column="chemical_store_number" jdbcType="INTEGER" property="chemicalStoreNumber" />
    <result column="chemical_store_area" jdbcType="DECIMAL" property="chemicalStoreArea" />
    <result column="repair_storage_number" jdbcType="INTEGER" property="repairStorageNumber" />
    <result column="repair_storage_area" jdbcType="DECIMAL" property="repairStorageArea" />
    <result column="storehouse_number" jdbcType="INTEGER" property="storehouseNumber" />
    <result column="storehouse_area" jdbcType="DECIMAL" property="storehouseArea" />
    <result column="drawing_room_number" jdbcType="INTEGER" property="drawingRoomNumber" />
    <result column="drawing_room_area" jdbcType="DECIMAL" property="drawingRoomArea" />
    <result column="permanent_staff" jdbcType="INTEGER" property="permanentStaff" />
    <result column="employed_staff" jdbcType="INTEGER" property="employedStaff" />
    <result column="senior_staff" jdbcType="INTEGER" property="seniorStaff" />
    <result column="professional_staff" jdbcType="INTEGER" property="professionalStaff" />
    <result column="repair_workplace_address" jdbcType="VARCHAR" property="repairWorkplaceAddress" />
    <result column="repair_workplace_area" jdbcType="DECIMAL" property="repairWorkplaceArea" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    id, org_id, c_name, c_properties, aptitude_examine, current_aptitude_year, aptitude_num, 
    legal_representative, contacts_name, contacts_phone, facsimile, email, postalcode, 
    c_address, c_management, ratified_business_range, exist_business_range, business_range_ischange, 
    change_year, old_business_range, new_business_range, repair_area, office_area, temporary_area, 
    total_area, conform_workplace_equipment, conform_workplace, exist_humiture_adjust, 
    exist_sewerage, exist_scientific_base, exist_scientific_workstation, update_time, 
    create_time, updater, creater, remake, delete_mark, spare_data1, spare_data2, spare_data3,
    office_number, analysis_lab_number, analysis_lab_area, pretreatment_room, 
    pretreatment_room_area, chemical_lab_number, chemical_lab_area, cultural_relics_number, 
    cultural_relics_area, chemical_store_number, chemical_store_area, repair_storage_number, 
    repair_storage_area, storehouse_number, storehouse_area, drawing_room_number, drawing_room_area, 
    permanent_staff, employed_staff, senior_staff, professional_staff,repair_workplace_address, 
    repair_workplace_area
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tj720.admin.model.CulturalRelicInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cultural_relic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from cultural_relic_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    delete from cultural_relic_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tj720.admin.model.CulturalRelicInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    delete from cultural_relic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tj720.admin.model.CulturalRelicInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    insert into cultural_relic_info (id, org_id, c_name, 
      c_properties, aptitude_examine, current_aptitude_year, 
      aptitude_num, legal_representative, contacts_name, 
      contacts_phone, facsimile, email, 
      postalcode, c_address, c_management, 
      ratified_business_range, exist_business_range, 
      business_range_ischange, change_year, old_business_range, 
      new_business_range, repair_area, temporary_area, 
      total_area, conform_workplace_equipment, conform_workplace, 
      exist_humiture_adjust, exist_sewerage, exist_scientific_base, 
      exist_scientific_workstation, update_time, 
      create_time, updater, creater, 
      remake, delete_mark, spare_data1, 
      spare_data2, spare_data3, office_number, 
      office_area, analysis_lab_number, analysis_lab_area, 
      pretreatment_room, pretreatment_room_area, 
      chemical_lab_number, chemical_lab_area, cultural_relics_number, 
      cultural_relics_area, chemical_store_number, 
      chemical_store_area, repair_storage_number, 
      repair_storage_area, storehouse_number, storehouse_area, 
      drawing_room_number, drawing_room_area, permanent_staff, 
      employed_staff, senior_staff, professional_staff,
      repair_workplace_address, repair_workplace_area
      )
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{cProperties,jdbcType=VARCHAR}, #{aptitudeExamine,jdbcType=VARCHAR}, #{currentAptitudeYear,jdbcType=VARCHAR}, 
      #{aptitudeNum,jdbcType=VARCHAR}, #{legalRepresentative,jdbcType=VARCHAR}, #{contactsName,jdbcType=VARCHAR}, 
      #{contactsPhone,jdbcType=VARCHAR}, #{facsimile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{postalcode,jdbcType=VARCHAR}, #{cAddress,jdbcType=VARCHAR}, #{cManagement,jdbcType=VARCHAR}, 
      #{ratifiedBusinessRange,jdbcType=VARCHAR}, #{existBusinessRange,jdbcType=VARCHAR}, 
      #{businessRangeIschange,jdbcType=INTEGER}, #{changeYear,jdbcType=VARCHAR}, #{oldBusinessRange,jdbcType=VARCHAR}, 
      #{newBusinessRange,jdbcType=VARCHAR}, #{repairArea,jdbcType=DECIMAL}, #{temporaryArea,jdbcType=DECIMAL}, 
      #{totalArea,jdbcType=DECIMAL}, #{conformWorkplaceEquipment,jdbcType=INTEGER}, #{conformWorkplace,jdbcType=INTEGER}, 
      #{existHumitureAdjust,jdbcType=INTEGER}, #{existSewerage,jdbcType=INTEGER}, #{existScientificBase,jdbcType=INTEGER}, 
      #{existScientificWorkstation,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{remake,jdbcType=VARCHAR}, #{deleteMark,jdbcType=VARCHAR}, #{spareData1,jdbcType=VARCHAR}, 
      #{spareData2,jdbcType=VARCHAR}, #{spareData3,jdbcType=VARCHAR}, #{officeNumber,jdbcType=INTEGER}, 
      #{officeArea,jdbcType=DECIMAL}, #{analysisLabNumber,jdbcType=INTEGER}, #{analysisLabArea,jdbcType=DECIMAL}, 
      #{pretreatmentRoom,jdbcType=INTEGER}, #{pretreatmentRoomArea,jdbcType=DECIMAL}, 
      #{chemicalLabNumber,jdbcType=INTEGER}, #{chemicalLabArea,jdbcType=DECIMAL}, #{culturalRelicsNumber,jdbcType=INTEGER}, 
      #{culturalRelicsArea,jdbcType=DECIMAL}, #{chemicalStoreNumber,jdbcType=INTEGER}, 
      #{chemicalStoreArea,jdbcType=DECIMAL}, #{repairStorageNumber,jdbcType=INTEGER}, 
      #{repairStorageArea,jdbcType=DECIMAL}, #{storehouseNumber,jdbcType=INTEGER}, #{storehouseArea,jdbcType=DECIMAL}, 
      #{drawingRoomNumber,jdbcType=INTEGER}, #{drawingRoomArea,jdbcType=DECIMAL}, #{permanentStaff,jdbcType=INTEGER}, 
      #{employedStaff,jdbcType=INTEGER}, #{seniorStaff,jdbcType=INTEGER}, #{professionalStaff,jdbcType=INTEGER},
      #{repairWorkplaceAddress,jdbcType=VARCHAR}, #{repairWorkplaceArea,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tj720.admin.model.CulturalRelicInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    insert into cultural_relic_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="cName != null" >
        c_name,
      </if>
      <if test="cProperties != null" >
        c_properties,
      </if>
      <if test="aptitudeExamine != null" >
        aptitude_examine,
      </if>
      <if test="currentAptitudeYear != null" >
        current_aptitude_year,
      </if>
      <if test="aptitudeNum != null" >
        aptitude_num,
      </if>
      <if test="legalRepresentative != null" >
        legal_representative,
      </if>
      <if test="contactsName != null" >
        contacts_name,
      </if>
      <if test="contactsPhone != null" >
        contacts_phone,
      </if>
      <if test="facsimile != null" >
        facsimile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="postalcode != null" >
        postalcode,
      </if>
      <if test="cAddress != null" >
        c_address,
      </if>
      <if test="cManagement != null" >
        c_management,
      </if>
      <if test="ratifiedBusinessRange != null" >
        ratified_business_range,
      </if>
      <if test="existBusinessRange != null" >
        exist_business_range,
      </if>
      <if test="businessRangeIschange != null" >
        business_range_ischange,
      </if>
      <if test="changeYear != null" >
        change_year,
      </if>
      <if test="oldBusinessRange != null" >
        old_business_range,
      </if>
      <if test="newBusinessRange != null" >
        new_business_range,
      </if>
      <if test="repairArea != null" >
        repair_area,
      </if>
      <if test="officeArea != null" >
        office_area,
      </if>
      <if test="temporaryArea != null" >
        temporary_area,
      </if>
      <if test="totalArea != null" >
        total_area,
      </if>
      <if test="conformWorkplaceEquipment != null" >
        conform_workplace_equipment,
      </if>
      <if test="conformWorkplace != null" >
        conform_workplace,
      </if>
      <if test="existHumitureAdjust != null" >
        exist_humiture_adjust,
      </if>
      <if test="existSewerage != null" >
        exist_sewerage,
      </if>
      <if test="existScientificBase != null" >
        exist_scientific_base,
      </if>
      <if test="existScientificWorkstation != null" >
        exist_scientific_workstation,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="remake != null" >
        remake,
      </if>
      <if test="deleteMark != null" >
        delete_mark,
      </if>
      <if test="spareData1 != null" >
        spare_data1,
      </if>
      <if test="spareData2 != null" >
        spare_data2,
      </if>
      <if test="spareData3 != null" >
        spare_data3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="cName != null" >
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cProperties != null" >
        #{cProperties,jdbcType=VARCHAR},
      </if>
      <if test="aptitudeExamine != null" >
        #{aptitudeExamine,jdbcType=VARCHAR},
      </if>
      <if test="currentAptitudeYear != null" >
        #{currentAptitudeYear,jdbcType=VARCHAR},
      </if>
      <if test="aptitudeNum != null" >
        #{aptitudeNum,jdbcType=VARCHAR},
      </if>
      <if test="legalRepresentative != null" >
        #{legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="contactsName != null" >
        #{contactsName,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null" >
        #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="facsimile != null" >
        #{facsimile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="cAddress != null" >
        #{cAddress,jdbcType=VARCHAR},
      </if>
      <if test="cManagement != null" >
        #{cManagement,jdbcType=VARCHAR},
      </if>
      <if test="ratifiedBusinessRange != null" >
        #{ratifiedBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="existBusinessRange != null" >
        #{existBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="businessRangeIschange != null" >
        #{businessRangeIschange,jdbcType=INTEGER},
      </if>
      <if test="changeYear != null" >
        #{changeYear,jdbcType=VARCHAR},
      </if>
      <if test="oldBusinessRange != null" >
        #{oldBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="newBusinessRange != null" >
        #{newBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="repairArea != null" >
        #{repairArea,jdbcType=DECIMAL},
      </if>
      <if test="officeArea != null" >
        #{officeArea,jdbcType=DECIMAL},
      </if>
      <if test="temporaryArea != null" >
        #{temporaryArea,jdbcType=DECIMAL},
      </if>
      <if test="totalArea != null" >
        #{totalArea,jdbcType=DECIMAL},
      </if>
      <if test="conformWorkplaceEquipment != null" >
        #{conformWorkplaceEquipment,jdbcType=INTEGER},
      </if>
      <if test="conformWorkplace != null" >
        #{conformWorkplace,jdbcType=INTEGER},
      </if>
      <if test="existHumitureAdjust != null" >
        #{existHumitureAdjust,jdbcType=INTEGER},
      </if>
      <if test="existSewerage != null" >
        #{existSewerage,jdbcType=INTEGER},
      </if>
      <if test="existScientificBase != null" >
        #{existScientificBase,jdbcType=INTEGER},
      </if>
      <if test="existScientificWorkstation != null" >
        #{existScientificWorkstation,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remake != null" >
        #{remake,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null" >
        #{deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="spareData1 != null" >
        #{spareData1,jdbcType=VARCHAR},
      </if>
      <if test="spareData2 != null" >
        #{spareData2,jdbcType=VARCHAR},
      </if>
      <if test="spareData3 != null" >
        #{spareData3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tj720.admin.model.CulturalRelicInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select count(*) from cultural_relic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
   update cultural_relic_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.cName != null">
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.cProperties != null">
        c_properties = #{record.cProperties,jdbcType=VARCHAR},
      </if>
      <if test="record.aptitudeExamine != null">
        aptitude_examine = #{record.aptitudeExamine,jdbcType=VARCHAR},
      </if>
      <if test="record.currentAptitudeYear != null">
        current_aptitude_year = #{record.currentAptitudeYear,jdbcType=VARCHAR},
      </if>
      <if test="record.aptitudeNum != null">
        aptitude_num = #{record.aptitudeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.legalRepresentative != null">
        legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="record.contactsName != null">
        contacts_name = #{record.contactsName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactsPhone != null">
        contacts_phone = #{record.contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.facsimile != null">
        facsimile = #{record.facsimile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null">
        postalcode = #{record.postalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.cAddress != null">
        c_address = #{record.cAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.cManagement != null">
        c_management = #{record.cManagement,jdbcType=VARCHAR},
      </if>
      <if test="record.ratifiedBusinessRange != null">
        ratified_business_range = #{record.ratifiedBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="record.existBusinessRange != null">
        exist_business_range = #{record.existBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="record.businessRangeIschange != null">
        business_range_ischange = #{record.businessRangeIschange,jdbcType=INTEGER},
      </if>
      <if test="record.changeYear != null">
        change_year = #{record.changeYear,jdbcType=VARCHAR},
      </if>
      <if test="record.oldBusinessRange != null">
        old_business_range = #{record.oldBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="record.newBusinessRange != null">
        new_business_range = #{record.newBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="record.repairArea != null">
        repair_area = #{record.repairArea,jdbcType=DECIMAL},
      </if>
      <if test="record.temporaryArea != null">
        temporary_area = #{record.temporaryArea,jdbcType=DECIMAL},
      </if>
      <if test="record.totalArea != null">
        total_area = #{record.totalArea,jdbcType=DECIMAL},
      </if>
      <if test="record.conformWorkplaceEquipment != null">
        conform_workplace_equipment = #{record.conformWorkplaceEquipment,jdbcType=INTEGER},
      </if>
      <if test="record.conformWorkplace != null">
        conform_workplace = #{record.conformWorkplace,jdbcType=INTEGER},
      </if>
      <if test="record.existHumitureAdjust != null">
        exist_humiture_adjust = #{record.existHumitureAdjust,jdbcType=INTEGER},
      </if>
      <if test="record.existSewerage != null">
        exist_sewerage = #{record.existSewerage,jdbcType=INTEGER},
      </if>
      <if test="record.existScientificBase != null">
        exist_scientific_base = #{record.existScientificBase,jdbcType=INTEGER},
      </if>
      <if test="record.existScientificWorkstation != null">
        exist_scientific_workstation = #{record.existScientificWorkstation,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.remake != null">
        remake = #{record.remake,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteMark != null">
        delete_mark = #{record.deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData1 != null">
        spare_data1 = #{record.spareData1,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData2 != null">
        spare_data2 = #{record.spareData2,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData3 != null">
        spare_data3 = #{record.spareData3,jdbcType=VARCHAR},
      </if>
      <if test="record.officeNumber != null">
        office_number = #{record.officeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.officeArea != null">
        office_area = #{record.officeArea,jdbcType=DECIMAL},
      </if>
      <if test="record.analysisLabNumber != null">
        analysis_lab_number = #{record.analysisLabNumber,jdbcType=INTEGER},
      </if>
      <if test="record.analysisLabArea != null">
        analysis_lab_area = #{record.analysisLabArea,jdbcType=DECIMAL},
      </if>
      <if test="record.pretreatmentRoom != null">
        pretreatment_room = #{record.pretreatmentRoom,jdbcType=INTEGER},
      </if>
      <if test="record.pretreatmentRoomArea != null">
        pretreatment_room_area = #{record.pretreatmentRoomArea,jdbcType=DECIMAL},
      </if>
      <if test="record.chemicalLabNumber != null">
        chemical_lab_number = #{record.chemicalLabNumber,jdbcType=INTEGER},
      </if>
      <if test="record.chemicalLabArea != null">
        chemical_lab_area = #{record.chemicalLabArea,jdbcType=DECIMAL},
      </if>
      <if test="record.culturalRelicsNumber != null">
        cultural_relics_number = #{record.culturalRelicsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.culturalRelicsArea != null">
        cultural_relics_area = #{record.culturalRelicsArea,jdbcType=DECIMAL},
      </if>
      <if test="record.chemicalStoreNumber != null">
        chemical_store_number = #{record.chemicalStoreNumber,jdbcType=INTEGER},
      </if>
      <if test="record.chemicalStoreArea != null">
        chemical_store_area = #{record.chemicalStoreArea,jdbcType=DECIMAL},
      </if>
      <if test="record.repairStorageNumber != null">
        repair_storage_number = #{record.repairStorageNumber,jdbcType=INTEGER},
      </if>
      <if test="record.repairStorageArea != null">
        repair_storage_area = #{record.repairStorageArea,jdbcType=DECIMAL},
      </if>
      <if test="record.storehouseNumber != null">
        storehouse_number = #{record.storehouseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.storehouseArea != null">
        storehouse_area = #{record.storehouseArea,jdbcType=DECIMAL},
      </if>
      <if test="record.drawingRoomNumber != null">
        drawing_room_number = #{record.drawingRoomNumber,jdbcType=INTEGER},
      </if>
      <if test="record.drawingRoomArea != null">
        drawing_room_area = #{record.drawingRoomArea,jdbcType=DECIMAL},
      </if>
      <if test="record.permanentStaff != null">
        permanent_staff = #{record.permanentStaff,jdbcType=INTEGER},
      </if>
      <if test="record.employedStaff != null">
        employed_staff = #{record.employedStaff,jdbcType=INTEGER},
      </if>
      <if test="record.seniorStaff != null">
        senior_staff = #{record.seniorStaff,jdbcType=INTEGER},
      </if>
      <if test="record.professionalStaff != null">
        professional_staff = #{record.professionalStaff,jdbcType=INTEGER},
      </if>
      <if test="record.repairWorkplaceAddress != null">
        repair_workplace_address = #{record.repairWorkplaceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.repairWorkplaceArea != null">
        repair_workplace_area = #{record.repairWorkplaceArea,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_relic_info
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      c_properties = #{record.cProperties,jdbcType=VARCHAR},
      aptitude_examine = #{record.aptitudeExamine,jdbcType=VARCHAR},
      current_aptitude_year = #{record.currentAptitudeYear,jdbcType=VARCHAR},
      aptitude_num = #{record.aptitudeNum,jdbcType=VARCHAR},
      legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
      contacts_name = #{record.contactsName,jdbcType=VARCHAR},
      contacts_phone = #{record.contactsPhone,jdbcType=VARCHAR},
      facsimile = #{record.facsimile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      postalcode = #{record.postalcode,jdbcType=VARCHAR},
      c_address = #{record.cAddress,jdbcType=VARCHAR},
      c_management = #{record.cManagement,jdbcType=VARCHAR},
      ratified_business_range = #{record.ratifiedBusinessRange,jdbcType=VARCHAR},
      exist_business_range = #{record.existBusinessRange,jdbcType=VARCHAR},
      business_range_ischange = #{record.businessRangeIschange,jdbcType=INTEGER},
      change_year = #{record.changeYear,jdbcType=VARCHAR},
      old_business_range = #{record.oldBusinessRange,jdbcType=VARCHAR},
      new_business_range = #{record.newBusinessRange,jdbcType=VARCHAR},
      repair_area = #{record.repairArea,jdbcType=DECIMAL},
      temporary_area = #{record.temporaryArea,jdbcType=DECIMAL},
      total_area = #{record.totalArea,jdbcType=DECIMAL},
      conform_workplace_equipment = #{record.conformWorkplaceEquipment,jdbcType=INTEGER},
      conform_workplace = #{record.conformWorkplace,jdbcType=INTEGER},
      exist_humiture_adjust = #{record.existHumitureAdjust,jdbcType=INTEGER},
      exist_sewerage = #{record.existSewerage,jdbcType=INTEGER},
      exist_scientific_base = #{record.existScientificBase,jdbcType=INTEGER},
      exist_scientific_workstation = #{record.existScientificWorkstation,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      remake = #{record.remake,jdbcType=VARCHAR},
      delete_mark = #{record.deleteMark,jdbcType=VARCHAR},
      spare_data1 = #{record.spareData1,jdbcType=VARCHAR},
      spare_data2 = #{record.spareData2,jdbcType=VARCHAR},
      spare_data3 = #{record.spareData3,jdbcType=VARCHAR},
      office_number = #{record.officeNumber,jdbcType=INTEGER},
      office_area = #{record.officeArea,jdbcType=DECIMAL},
      analysis_lab_number = #{record.analysisLabNumber,jdbcType=INTEGER},
      analysis_lab_area = #{record.analysisLabArea,jdbcType=DECIMAL},
      pretreatment_room = #{record.pretreatmentRoom,jdbcType=INTEGER},
      pretreatment_room_area = #{record.pretreatmentRoomArea,jdbcType=DECIMAL},
      chemical_lab_number = #{record.chemicalLabNumber,jdbcType=INTEGER},
      chemical_lab_area = #{record.chemicalLabArea,jdbcType=DECIMAL},
      cultural_relics_number = #{record.culturalRelicsNumber,jdbcType=INTEGER},
      cultural_relics_area = #{record.culturalRelicsArea,jdbcType=DECIMAL},
      chemical_store_number = #{record.chemicalStoreNumber,jdbcType=INTEGER},
      chemical_store_area = #{record.chemicalStoreArea,jdbcType=DECIMAL},
      repair_storage_number = #{record.repairStorageNumber,jdbcType=INTEGER},
      repair_storage_area = #{record.repairStorageArea,jdbcType=DECIMAL},
      storehouse_number = #{record.storehouseNumber,jdbcType=INTEGER},
      storehouse_area = #{record.storehouseArea,jdbcType=DECIMAL},
      drawing_room_number = #{record.drawingRoomNumber,jdbcType=INTEGER},
      drawing_room_area = #{record.drawingRoomArea,jdbcType=DECIMAL},
      permanent_staff = #{record.permanentStaff,jdbcType=INTEGER},
      employed_staff = #{record.employedStaff,jdbcType=INTEGER},
      senior_staff = #{record.seniorStaff,jdbcType=INTEGER},
      professional_staff = #{record.professionalStaff,jdbcType=INTEGER},
      repair_workplace_address = #{record.repairWorkplaceAddress,jdbcType=VARCHAR},
      repair_workplace_area = #{record.repairWorkplaceArea,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.admin.model.CulturalRelicInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_relic_info
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cProperties != null">
        c_properties = #{cProperties,jdbcType=VARCHAR},
      </if>
      <if test="aptitudeExamine != null">
        aptitude_examine = #{aptitudeExamine,jdbcType=VARCHAR},
      </if>
      <if test="currentAptitudeYear != null">
        current_aptitude_year = #{currentAptitudeYear,jdbcType=VARCHAR},
      </if>
      <if test="aptitudeNum != null">
        aptitude_num = #{aptitudeNum,jdbcType=VARCHAR},
      </if>
      <if test="legalRepresentative != null">
        legal_representative = #{legalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="contactsName != null">
        contacts_name = #{contactsName,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null">
        contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="facsimile != null">
        facsimile = #{facsimile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null">
        postalcode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="cAddress != null">
        c_address = #{cAddress,jdbcType=VARCHAR},
      </if>
      <if test="cManagement != null">
        c_management = #{cManagement,jdbcType=VARCHAR},
      </if>
      <if test="ratifiedBusinessRange != null">
        ratified_business_range = #{ratifiedBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="existBusinessRange != null">
        exist_business_range = #{existBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="businessRangeIschange != null">
        business_range_ischange = #{businessRangeIschange,jdbcType=INTEGER},
      </if>
      <if test="changeYear != null">
        change_year = #{changeYear,jdbcType=VARCHAR},
      </if>
      <if test="oldBusinessRange != null">
        old_business_range = #{oldBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="newBusinessRange != null">
        new_business_range = #{newBusinessRange,jdbcType=VARCHAR},
      </if>
      <if test="repairArea != null">
        repair_area = #{repairArea,jdbcType=DECIMAL},
      </if>
      <if test="temporaryArea != null">
        temporary_area = #{temporaryArea,jdbcType=DECIMAL},
      </if>
      <if test="totalArea != null">
        total_area = #{totalArea,jdbcType=DECIMAL},
      </if>
      <if test="conformWorkplaceEquipment != null">
        conform_workplace_equipment = #{conformWorkplaceEquipment,jdbcType=INTEGER},
      </if>
      <if test="conformWorkplace != null">
        conform_workplace = #{conformWorkplace,jdbcType=INTEGER},
      </if>
      <if test="existHumitureAdjust != null">
        exist_humiture_adjust = #{existHumitureAdjust,jdbcType=INTEGER},
      </if>
      <if test="existSewerage != null">
        exist_sewerage = #{existSewerage,jdbcType=INTEGER},
      </if>
      <if test="existScientificBase != null">
        exist_scientific_base = #{existScientificBase,jdbcType=INTEGER},
      </if>
      <if test="existScientificWorkstation != null">
        exist_scientific_workstation = #{existScientificWorkstation,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remake != null">
        remake = #{remake,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null">
        delete_mark = #{deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="spareData1 != null">
        spare_data1 = #{spareData1,jdbcType=VARCHAR},
      </if>
      <if test="spareData2 != null">
        spare_data2 = #{spareData2,jdbcType=VARCHAR},
      </if>
      <if test="spareData3 != null">
        spare_data3 = #{spareData3,jdbcType=VARCHAR},
      </if>
      <if test="officeNumber != null">
        office_number = #{officeNumber,jdbcType=INTEGER},
      </if>
      <if test="officeArea != null">
        office_area = #{officeArea,jdbcType=DECIMAL},
      </if>
      <if test="analysisLabNumber != null">
        analysis_lab_number = #{analysisLabNumber,jdbcType=INTEGER},
      </if>
      <if test="analysisLabArea != null">
        analysis_lab_area = #{analysisLabArea,jdbcType=DECIMAL},
      </if>
      <if test="pretreatmentRoom != null">
        pretreatment_room = #{pretreatmentRoom,jdbcType=INTEGER},
      </if>
      <if test="pretreatmentRoomArea != null">
        pretreatment_room_area = #{pretreatmentRoomArea,jdbcType=DECIMAL},
      </if>
      <if test="chemicalLabNumber != null">
        chemical_lab_number = #{chemicalLabNumber,jdbcType=INTEGER},
      </if>
      <if test="chemicalLabArea != null">
        chemical_lab_area = #{chemicalLabArea,jdbcType=DECIMAL},
      </if>
      <if test="culturalRelicsNumber != null">
        cultural_relics_number = #{culturalRelicsNumber,jdbcType=INTEGER},
      </if>
      <if test="culturalRelicsArea != null">
        cultural_relics_area = #{culturalRelicsArea,jdbcType=DECIMAL},
      </if>
      <if test="chemicalStoreNumber != null">
        chemical_store_number = #{chemicalStoreNumber,jdbcType=INTEGER},
      </if>
      <if test="chemicalStoreArea != null">
        chemical_store_area = #{chemicalStoreArea,jdbcType=DECIMAL},
      </if>
      <if test="repairStorageNumber != null">
        repair_storage_number = #{repairStorageNumber,jdbcType=INTEGER},
      </if>
      <if test="repairStorageArea != null">
        repair_storage_area = #{repairStorageArea,jdbcType=DECIMAL},
      </if>
      <if test="storehouseNumber != null">
        storehouse_number = #{storehouseNumber,jdbcType=INTEGER},
      </if>
      <if test="storehouseArea != null">
        storehouse_area = #{storehouseArea,jdbcType=DECIMAL},
      </if>
      <if test="drawingRoomNumber != null">
        drawing_room_number = #{drawingRoomNumber,jdbcType=INTEGER},
      </if>
      <if test="drawingRoomArea != null">
        drawing_room_area = #{drawingRoomArea,jdbcType=DECIMAL},
      </if>
      <if test="permanentStaff != null">
        permanent_staff = #{permanentStaff,jdbcType=INTEGER},
      </if>
      <if test="employedStaff != null">
        employed_staff = #{employedStaff,jdbcType=INTEGER},
      </if>
      <if test="seniorStaff != null">
        senior_staff = #{seniorStaff,jdbcType=INTEGER},
      </if>
      <if test="professionalStaff != null">
        professional_staff = #{professionalStaff,jdbcType=INTEGER},
      </if>
      <if test="repairWorkplaceAddress != null">
        repair_workplace_address = #{repairWorkplaceAddress,jdbcType=VARCHAR},
      </if>
      <if test="repairWorkplaceArea != null">
        repair_workplace_area = #{repairWorkplaceArea,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tj720.admin.model.CulturalRelicInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_relic_info
    set org_id = #{orgId,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      c_properties = #{cProperties,jdbcType=VARCHAR},
      aptitude_examine = #{aptitudeExamine,jdbcType=VARCHAR},
      current_aptitude_year = #{currentAptitudeYear,jdbcType=VARCHAR},
      aptitude_num = #{aptitudeNum,jdbcType=VARCHAR},
      legal_representative = #{legalRepresentative,jdbcType=VARCHAR},
      contacts_name = #{contactsName,jdbcType=VARCHAR},
      contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      facsimile = #{facsimile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      postalcode = #{postalcode,jdbcType=VARCHAR},
      c_address = #{cAddress,jdbcType=VARCHAR},
      c_management = #{cManagement,jdbcType=VARCHAR},
      ratified_business_range = #{ratifiedBusinessRange,jdbcType=VARCHAR},
      exist_business_range = #{existBusinessRange,jdbcType=VARCHAR},
      business_range_ischange = #{businessRangeIschange,jdbcType=INTEGER},
      change_year = #{changeYear,jdbcType=VARCHAR},
      old_business_range = #{oldBusinessRange,jdbcType=VARCHAR},
      new_business_range = #{newBusinessRange,jdbcType=VARCHAR},
      repair_area = #{repairArea,jdbcType=DECIMAL},
      temporary_area = #{temporaryArea,jdbcType=DECIMAL},
      total_area = #{totalArea,jdbcType=DECIMAL},
      conform_workplace_equipment = #{conformWorkplaceEquipment,jdbcType=INTEGER},
      conform_workplace = #{conformWorkplace,jdbcType=INTEGER},
      exist_humiture_adjust = #{existHumitureAdjust,jdbcType=INTEGER},
      exist_sewerage = #{existSewerage,jdbcType=INTEGER},
      exist_scientific_base = #{existScientificBase,jdbcType=INTEGER},
      exist_scientific_workstation = #{existScientificWorkstation,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      remake = #{remake,jdbcType=VARCHAR},
      delete_mark = #{deleteMark,jdbcType=VARCHAR},
      spare_data1 = #{spareData1,jdbcType=VARCHAR},
      spare_data2 = #{spareData2,jdbcType=VARCHAR},
      spare_data3 = #{spareData3,jdbcType=VARCHAR},
      office_number = #{officeNumber,jdbcType=INTEGER},
      office_area = #{officeArea,jdbcType=DECIMAL},
      analysis_lab_number = #{analysisLabNumber,jdbcType=INTEGER},
      analysis_lab_area = #{analysisLabArea,jdbcType=DECIMAL},
      pretreatment_room = #{pretreatmentRoom,jdbcType=INTEGER},
      pretreatment_room_area = #{pretreatmentRoomArea,jdbcType=DECIMAL},
      chemical_lab_number = #{chemicalLabNumber,jdbcType=INTEGER},
      chemical_lab_area = #{chemicalLabArea,jdbcType=DECIMAL},
      cultural_relics_number = #{culturalRelicsNumber,jdbcType=INTEGER},
      cultural_relics_area = #{culturalRelicsArea,jdbcType=DECIMAL},
      chemical_store_number = #{chemicalStoreNumber,jdbcType=INTEGER},
      chemical_store_area = #{chemicalStoreArea,jdbcType=DECIMAL},
      repair_storage_number = #{repairStorageNumber,jdbcType=INTEGER},
      repair_storage_area = #{repairStorageArea,jdbcType=DECIMAL},
      storehouse_number = #{storehouseNumber,jdbcType=INTEGER},
      storehouse_area = #{storehouseArea,jdbcType=DECIMAL},
      drawing_room_number = #{drawingRoomNumber,jdbcType=INTEGER},
      drawing_room_area = #{drawingRoomArea,jdbcType=DECIMAL},
      permanent_staff = #{permanentStaff,jdbcType=INTEGER},
      employed_staff = #{employedStaff,jdbcType=INTEGER},
      senior_staff = #{seniorStaff,jdbcType=INTEGER},
      professional_staff = #{professionalStaff,jdbcType=INTEGER},
      repair_workplace_address = #{repairWorkplaceAddress,jdbcType=VARCHAR},
      repair_workplace_area = #{repairWorkplaceArea,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getByOrgId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
  	<include refid="Base_Column_List" />
  	from cultural_relic_info
  	where org_id = #{relicsBureauId,jdbcType=VARCHAR}
  	and delete_mark = 1
  </select>
  
  <select id="getBaseInfo" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from cultural_relic_info
  	where org_id = #{orgId,jdbcType=VARCHAR}
  	and delete_mark = #{flag,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteInfo">
  	delete from cultural_relic_info
  	where org_id = #{orgId,jdbcType=VARCHAR}
  	and delete_mark = #{flag,jdbcType=VARCHAR}
  </delete>
  
</mapper>