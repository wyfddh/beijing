<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tj720.admin.dao.map.CulturalOrgInfoMapper" >
  <resultMap id="BaseResultMap" type="com.tj720.admin.model.CulturalOrgInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="c_name" property="cName" jdbcType="VARCHAR" />
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="org_manager" property="orgManager" jdbcType="VARCHAR" />
    <result column="org_relation" property="orgRelation" jdbcType="VARCHAR" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="org_property" property="orgProperty" jdbcType="VARCHAR" />
    <result column="org_type" property="orgType" jdbcType="VARCHAR" />
    <result column="is_cultural_relic_system" property="isCulturalRelicSystem" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="postalcode" property="postalcode" jdbcType="VARCHAR" />
    <result column="org_phone" property="orgPhone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="org_url" property="orgUrl" jdbcType="VARCHAR" />
    <result column="administrative_area" property="administrativeArea" jdbcType="INTEGER" />
    <result column="census_org" property="censusOrg" jdbcType="INTEGER" />
    <result column="exist_paper_archive" property="existPaperArchive" jdbcType="INTEGER" />
    <result column="exist_number_archive" property="existNumberArchive" jdbcType="INTEGER" />
    <result column="storeroom_area" property="storeroomArea" jdbcType="DECIMAL" />
    <result column="storeman_count" property="storemanCount" jdbcType="INTEGER" />
    <result column="leader_name" property="leaderName" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="work_start_time" property="workStartTime" jdbcType="VARCHAR" />
    <result column="cultural_relic_count" property="culturalRelicCount" jdbcType="INTEGER" />
    <result column="collection_count" property="collectionCount" jdbcType="INTEGER" />
    <result column="one_level_cultural_relic" property="oneLevelCulturalRelic" jdbcType="INTEGER" />
    <result column="second_level_cultural_relic" property="secondLevelCulturalRelic" jdbcType="INTEGER" />
    <result column="three_level_cultural_relic" property="threeLevelCulturalRelic" jdbcType="INTEGER" />
    <result column="commonly_cultural_relic" property="commonlyCulturalRelic" jdbcType="INTEGER" />
    <result column="no_grade_cultural_relic" property="noGradeCulturalRelic" jdbcType="INTEGER" />
    <result column="one_level_collection" property="oneLevelCollection" jdbcType="INTEGER" />
    <result column="second_level_collection" property="secondLevelCollection" jdbcType="INTEGER" />
    <result column="three_level_collection" property="threeLevelCollection" jdbcType="INTEGER" />
    <result column="commonly_collection" property="commonlyCollection" jdbcType="INTEGER" />
    <result column="no_grade_collection" property="noGradeCollection" jdbcType="INTEGER" />
    <result column="natural_collection" property="naturalCollection" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="delete_mark" property="deleteMark" jdbcType="VARCHAR" />
    <result column="spare_data1" property="spareData1" jdbcType="VARCHAR" />
    <result column="spare_data2" property="spareData2" jdbcType="VARCHAR" />
    <result column="spare_data3" property="spareData3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    id, org_id, c_name, org_code, org_manager, org_relation, industry, org_property, 
    org_type, is_cultural_relic_system, address, postalcode, org_phone, fax, org_url, 
    administrative_area, census_org, exist_paper_archive, exist_number_archive, storeroom_area, 
    storeman_count, leader_name, job, telephone, mobile_phone, email, work_start_time, 
    cultural_relic_count, collection_count, one_level_cultural_relic, second_level_cultural_relic, 
    three_level_cultural_relic, commonly_cultural_relic, no_grade_cultural_relic, one_level_collection, 
    second_level_collection, three_level_collection, commonly_collection, no_grade_collection, 
    natural_collection, update_time, updater, create_time, creater, remark, delete_mark, 
    spare_data1, spare_data2, spare_data3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tj720.admin.model.CulturalOrgInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cultural_org_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from cultural_org_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    delete from cultural_org_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tj720.admin.model.CulturalOrgInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    delete from cultural_org_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tj720.admin.model.CulturalOrgInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    insert into cultural_org_info (id, org_id, c_name, 
      org_code, org_manager, org_relation, 
      industry, org_property, org_type, 
      is_cultural_relic_system, address, postalcode, 
      org_phone, fax, org_url, 
      administrative_area, census_org, exist_paper_archive, 
      exist_number_archive, storeroom_area, storeman_count, 
      leader_name, job, telephone, 
      mobile_phone, email, work_start_time, 
      cultural_relic_count, collection_count, one_level_cultural_relic, 
      second_level_cultural_relic, three_level_cultural_relic, 
      commonly_cultural_relic, no_grade_cultural_relic, 
      one_level_collection, second_level_collection, 
      three_level_collection, commonly_collection, 
      no_grade_collection, natural_collection, update_time, 
      updater, create_time, creater, 
      remark, delete_mark, spare_data1, 
      spare_data2, spare_data3)
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{orgCode,jdbcType=VARCHAR}, #{orgManager,jdbcType=VARCHAR}, #{orgRelation,jdbcType=VARCHAR}, 
      #{industry,jdbcType=VARCHAR}, #{orgProperty,jdbcType=VARCHAR}, #{orgType,jdbcType=VARCHAR}, 
      #{isCulturalRelicSystem,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{postalcode,jdbcType=VARCHAR}, 
      #{orgPhone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{orgUrl,jdbcType=VARCHAR}, 
      #{administrativeArea,jdbcType=INTEGER}, #{censusOrg,jdbcType=INTEGER}, #{existPaperArchive,jdbcType=INTEGER}, 
      #{existNumberArchive,jdbcType=INTEGER}, #{storeroomArea,jdbcType=DECIMAL}, #{storemanCount,jdbcType=INTEGER}, 
      #{leaderName,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{mobilePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{workStartTime,jdbcType=VARCHAR}, 
      #{culturalRelicCount,jdbcType=INTEGER}, #{collectionCount,jdbcType=INTEGER}, #{oneLevelCulturalRelic,jdbcType=INTEGER}, 
      #{secondLevelCulturalRelic,jdbcType=INTEGER}, #{threeLevelCulturalRelic,jdbcType=INTEGER}, 
      #{commonlyCulturalRelic,jdbcType=INTEGER}, #{noGradeCulturalRelic,jdbcType=INTEGER}, 
      #{oneLevelCollection,jdbcType=INTEGER}, #{secondLevelCollection,jdbcType=INTEGER}, 
      #{threeLevelCollection,jdbcType=INTEGER}, #{commonlyCollection,jdbcType=INTEGER}, 
      #{noGradeCollection,jdbcType=INTEGER}, #{naturalCollection,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{deleteMark,jdbcType=VARCHAR}, #{spareData1,jdbcType=VARCHAR}, 
      #{spareData2,jdbcType=VARCHAR}, #{spareData3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tj720.admin.model.CulturalOrgInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    insert into cultural_org_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="cName != null" >
        c_name,
      </if>
      <if test="orgCode != null" >
        org_code,
      </if>
      <if test="orgManager != null" >
        org_manager,
      </if>
      <if test="orgRelation != null" >
        org_relation,
      </if>
      <if test="industry != null" >
        industry,
      </if>
      <if test="orgProperty != null" >
        org_property,
      </if>
      <if test="orgType != null" >
        org_type,
      </if>
      <if test="isCulturalRelicSystem != null" >
        is_cultural_relic_system,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="postalcode != null" >
        postalcode,
      </if>
      <if test="orgPhone != null" >
        org_phone,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="orgUrl != null" >
        org_url,
      </if>
      <if test="administrativeArea != null" >
        administrative_area,
      </if>
      <if test="censusOrg != null" >
        census_org,
      </if>
      <if test="existPaperArchive != null" >
        exist_paper_archive,
      </if>
      <if test="existNumberArchive != null" >
        exist_number_archive,
      </if>
      <if test="storeroomArea != null" >
        storeroom_area,
      </if>
      <if test="storemanCount != null" >
        storeman_count,
      </if>
      <if test="leaderName != null" >
        leader_name,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="mobilePhone != null" >
        mobile_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="workStartTime != null" >
        work_start_time,
      </if>
      <if test="culturalRelicCount != null" >
        cultural_relic_count,
      </if>
      <if test="collectionCount != null" >
        collection_count,
      </if>
      <if test="oneLevelCulturalRelic != null" >
        one_level_cultural_relic,
      </if>
      <if test="secondLevelCulturalRelic != null" >
        second_level_cultural_relic,
      </if>
      <if test="threeLevelCulturalRelic != null" >
        three_level_cultural_relic,
      </if>
      <if test="commonlyCulturalRelic != null" >
        commonly_cultural_relic,
      </if>
      <if test="noGradeCulturalRelic != null" >
        no_grade_cultural_relic,
      </if>
      <if test="oneLevelCollection != null" >
        one_level_collection,
      </if>
      <if test="secondLevelCollection != null" >
        second_level_collection,
      </if>
      <if test="threeLevelCollection != null" >
        three_level_collection,
      </if>
      <if test="commonlyCollection != null" >
        commonly_collection,
      </if>
      <if test="noGradeCollection != null" >
        no_grade_collection,
      </if>
      <if test="naturalCollection != null" >
        natural_collection,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="deleteMark != null" >
        delete_mark,
      </if>
      <if test="spareData1 != null" >
        spare_data1,
      </if>
      <if test="spareData2 != null" >
        spare_data2,
      </if>
      <if test="spareData3 != null" >
        spare_data3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="cName != null" >
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgManager != null" >
        #{orgManager,jdbcType=VARCHAR},
      </if>
      <if test="orgRelation != null" >
        #{orgRelation,jdbcType=VARCHAR},
      </if>
      <if test="industry != null" >
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="orgProperty != null" >
        #{orgProperty,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="isCulturalRelicSystem != null" >
        #{isCulturalRelicSystem,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="orgPhone != null" >
        #{orgPhone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="orgUrl != null" >
        #{orgUrl,jdbcType=VARCHAR},
      </if>
      <if test="administrativeArea != null" >
        #{administrativeArea,jdbcType=INTEGER},
      </if>
      <if test="censusOrg != null" >
        #{censusOrg,jdbcType=INTEGER},
      </if>
      <if test="existPaperArchive != null" >
        #{existPaperArchive,jdbcType=INTEGER},
      </if>
      <if test="existNumberArchive != null" >
        #{existNumberArchive,jdbcType=INTEGER},
      </if>
      <if test="storeroomArea != null" >
        #{storeroomArea,jdbcType=DECIMAL},
      </if>
      <if test="storemanCount != null" >
        #{storemanCount,jdbcType=INTEGER},
      </if>
      <if test="leaderName != null" >
        #{leaderName,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="workStartTime != null" >
        #{workStartTime,jdbcType=VARCHAR},
      </if>
      <if test="culturalRelicCount != null" >
        #{culturalRelicCount,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null" >
        #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="oneLevelCulturalRelic != null" >
        #{oneLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="secondLevelCulturalRelic != null" >
        #{secondLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="threeLevelCulturalRelic != null" >
        #{threeLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="commonlyCulturalRelic != null" >
        #{commonlyCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="noGradeCulturalRelic != null" >
        #{noGradeCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="oneLevelCollection != null" >
        #{oneLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="secondLevelCollection != null" >
        #{secondLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="threeLevelCollection != null" >
        #{threeLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="commonlyCollection != null" >
        #{commonlyCollection,jdbcType=INTEGER},
      </if>
      <if test="noGradeCollection != null" >
        #{noGradeCollection,jdbcType=INTEGER},
      </if>
      <if test="naturalCollection != null" >
        #{naturalCollection,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null" >
        #{deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="spareData1 != null" >
        #{spareData1,jdbcType=VARCHAR},
      </if>
      <if test="spareData2 != null" >
        #{spareData2,jdbcType=VARCHAR},
      </if>
      <if test="spareData3 != null" >
        #{spareData3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tj720.admin.model.CulturalOrgInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    select count(*) from cultural_org_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_org_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.cName != null" >
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null" >
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgManager != null" >
        org_manager = #{record.orgManager,jdbcType=VARCHAR},
      </if>
      <if test="record.orgRelation != null" >
        org_relation = #{record.orgRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.industry != null" >
        industry = #{record.industry,jdbcType=VARCHAR},
      </if>
      <if test="record.orgProperty != null" >
        org_property = #{record.orgProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.orgType != null" >
        org_type = #{record.orgType,jdbcType=VARCHAR},
      </if>
      <if test="record.isCulturalRelicSystem != null" >
        is_cultural_relic_system = #{record.isCulturalRelicSystem,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null" >
        postalcode = #{record.postalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgPhone != null" >
        org_phone = #{record.orgPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.orgUrl != null" >
        org_url = #{record.orgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.administrativeArea != null" >
        administrative_area = #{record.administrativeArea,jdbcType=INTEGER},
      </if>
      <if test="record.censusOrg != null" >
        census_org = #{record.censusOrg,jdbcType=INTEGER},
      </if>
      <if test="record.existPaperArchive != null" >
        exist_paper_archive = #{record.existPaperArchive,jdbcType=INTEGER},
      </if>
      <if test="record.existNumberArchive != null" >
        exist_number_archive = #{record.existNumberArchive,jdbcType=INTEGER},
      </if>
      <if test="record.storeroomArea != null" >
        storeroom_area = #{record.storeroomArea,jdbcType=DECIMAL},
      </if>
      <if test="record.storemanCount != null" >
        storeman_count = #{record.storemanCount,jdbcType=INTEGER},
      </if>
      <if test="record.leaderName != null" >
        leader_name = #{record.leaderName,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null" >
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.workStartTime != null" >
        work_start_time = #{record.workStartTime,jdbcType=VARCHAR},
      </if>
      <if test="record.culturalRelicCount != null" >
        cultural_relic_count = #{record.culturalRelicCount,jdbcType=INTEGER},
      </if>
      <if test="record.collectionCount != null" >
        collection_count = #{record.collectionCount,jdbcType=INTEGER},
      </if>
      <if test="record.oneLevelCulturalRelic != null" >
        one_level_cultural_relic = #{record.oneLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="record.secondLevelCulturalRelic != null" >
        second_level_cultural_relic = #{record.secondLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="record.threeLevelCulturalRelic != null" >
        three_level_cultural_relic = #{record.threeLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="record.commonlyCulturalRelic != null" >
        commonly_cultural_relic = #{record.commonlyCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="record.noGradeCulturalRelic != null" >
        no_grade_cultural_relic = #{record.noGradeCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="record.oneLevelCollection != null" >
        one_level_collection = #{record.oneLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="record.secondLevelCollection != null" >
        second_level_collection = #{record.secondLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="record.threeLevelCollection != null" >
        three_level_collection = #{record.threeLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="record.commonlyCollection != null" >
        commonly_collection = #{record.commonlyCollection,jdbcType=INTEGER},
      </if>
      <if test="record.noGradeCollection != null" >
        no_grade_collection = #{record.noGradeCollection,jdbcType=INTEGER},
      </if>
      <if test="record.naturalCollection != null" >
        natural_collection = #{record.naturalCollection,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteMark != null" >
        delete_mark = #{record.deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData1 != null" >
        spare_data1 = #{record.spareData1,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData2 != null" >
        spare_data2 = #{record.spareData2,jdbcType=VARCHAR},
      </if>
      <if test="record.spareData3 != null" >
        spare_data3 = #{record.spareData3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_org_info
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_manager = #{record.orgManager,jdbcType=VARCHAR},
      org_relation = #{record.orgRelation,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=VARCHAR},
      org_property = #{record.orgProperty,jdbcType=VARCHAR},
      org_type = #{record.orgType,jdbcType=VARCHAR},
      is_cultural_relic_system = #{record.isCulturalRelicSystem,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      postalcode = #{record.postalcode,jdbcType=VARCHAR},
      org_phone = #{record.orgPhone,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      org_url = #{record.orgUrl,jdbcType=VARCHAR},
      administrative_area = #{record.administrativeArea,jdbcType=INTEGER},
      census_org = #{record.censusOrg,jdbcType=INTEGER},
      exist_paper_archive = #{record.existPaperArchive,jdbcType=INTEGER},
      exist_number_archive = #{record.existNumberArchive,jdbcType=INTEGER},
      storeroom_area = #{record.storeroomArea,jdbcType=DECIMAL},
      storeman_count = #{record.storemanCount,jdbcType=INTEGER},
      leader_name = #{record.leaderName,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      work_start_time = #{record.workStartTime,jdbcType=VARCHAR},
      cultural_relic_count = #{record.culturalRelicCount,jdbcType=INTEGER},
      collection_count = #{record.collectionCount,jdbcType=INTEGER},
      one_level_cultural_relic = #{record.oneLevelCulturalRelic,jdbcType=INTEGER},
      second_level_cultural_relic = #{record.secondLevelCulturalRelic,jdbcType=INTEGER},
      three_level_cultural_relic = #{record.threeLevelCulturalRelic,jdbcType=INTEGER},
      commonly_cultural_relic = #{record.commonlyCulturalRelic,jdbcType=INTEGER},
      no_grade_cultural_relic = #{record.noGradeCulturalRelic,jdbcType=INTEGER},
      one_level_collection = #{record.oneLevelCollection,jdbcType=INTEGER},
      second_level_collection = #{record.secondLevelCollection,jdbcType=INTEGER},
      three_level_collection = #{record.threeLevelCollection,jdbcType=INTEGER},
      commonly_collection = #{record.commonlyCollection,jdbcType=INTEGER},
      no_grade_collection = #{record.noGradeCollection,jdbcType=INTEGER},
      natural_collection = #{record.naturalCollection,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creater = #{record.creater,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      delete_mark = #{record.deleteMark,jdbcType=VARCHAR},
      spare_data1 = #{record.spareData1,jdbcType=VARCHAR},
      spare_data2 = #{record.spareData2,jdbcType=VARCHAR},
      spare_data3 = #{record.spareData3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.admin.model.CulturalOrgInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_org_info
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="cName != null" >
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgManager != null" >
        org_manager = #{orgManager,jdbcType=VARCHAR},
      </if>
      <if test="orgRelation != null" >
        org_relation = #{orgRelation,jdbcType=VARCHAR},
      </if>
      <if test="industry != null" >
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="orgProperty != null" >
        org_property = #{orgProperty,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null" >
        org_type = #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="isCulturalRelicSystem != null" >
        is_cultural_relic_system = #{isCulturalRelicSystem,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        postalcode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="orgPhone != null" >
        org_phone = #{orgPhone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="orgUrl != null" >
        org_url = #{orgUrl,jdbcType=VARCHAR},
      </if>
      <if test="administrativeArea != null" >
        administrative_area = #{administrativeArea,jdbcType=INTEGER},
      </if>
      <if test="censusOrg != null" >
        census_org = #{censusOrg,jdbcType=INTEGER},
      </if>
      <if test="existPaperArchive != null" >
        exist_paper_archive = #{existPaperArchive,jdbcType=INTEGER},
      </if>
      <if test="existNumberArchive != null" >
        exist_number_archive = #{existNumberArchive,jdbcType=INTEGER},
      </if>
      <if test="storeroomArea != null" >
        storeroom_area = #{storeroomArea,jdbcType=DECIMAL},
      </if>
      <if test="storemanCount != null" >
        storeman_count = #{storemanCount,jdbcType=INTEGER},
      </if>
      <if test="leaderName != null" >
        leader_name = #{leaderName,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="workStartTime != null" >
        work_start_time = #{workStartTime,jdbcType=VARCHAR},
      </if>
      <if test="culturalRelicCount != null" >
        cultural_relic_count = #{culturalRelicCount,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null" >
        collection_count = #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="oneLevelCulturalRelic != null" >
        one_level_cultural_relic = #{oneLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="secondLevelCulturalRelic != null" >
        second_level_cultural_relic = #{secondLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="threeLevelCulturalRelic != null" >
        three_level_cultural_relic = #{threeLevelCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="commonlyCulturalRelic != null" >
        commonly_cultural_relic = #{commonlyCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="noGradeCulturalRelic != null" >
        no_grade_cultural_relic = #{noGradeCulturalRelic,jdbcType=INTEGER},
      </if>
      <if test="oneLevelCollection != null" >
        one_level_collection = #{oneLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="secondLevelCollection != null" >
        second_level_collection = #{secondLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="threeLevelCollection != null" >
        three_level_collection = #{threeLevelCollection,jdbcType=INTEGER},
      </if>
      <if test="commonlyCollection != null" >
        commonly_collection = #{commonlyCollection,jdbcType=INTEGER},
      </if>
      <if test="noGradeCollection != null" >
        no_grade_collection = #{noGradeCollection,jdbcType=INTEGER},
      </if>
      <if test="naturalCollection != null" >
        natural_collection = #{naturalCollection,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleteMark != null" >
        delete_mark = #{deleteMark,jdbcType=VARCHAR},
      </if>
      <if test="spareData1 != null" >
        spare_data1 = #{spareData1,jdbcType=VARCHAR},
      </if>
      <if test="spareData2 != null" >
        spare_data2 = #{spareData2,jdbcType=VARCHAR},
      </if>
      <if test="spareData3 != null" >
        spare_data3 = #{spareData3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tj720.admin.model.CulturalOrgInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 17 10:45:58 CST 2018.
    -->
    update cultural_org_info
    set org_id = #{orgId,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_manager = #{orgManager,jdbcType=VARCHAR},
      org_relation = #{orgRelation,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      org_property = #{orgProperty,jdbcType=VARCHAR},
      org_type = #{orgType,jdbcType=VARCHAR},
      is_cultural_relic_system = #{isCulturalRelicSystem,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      postalcode = #{postalcode,jdbcType=VARCHAR},
      org_phone = #{orgPhone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      org_url = #{orgUrl,jdbcType=VARCHAR},
      administrative_area = #{administrativeArea,jdbcType=INTEGER},
      census_org = #{censusOrg,jdbcType=INTEGER},
      exist_paper_archive = #{existPaperArchive,jdbcType=INTEGER},
      exist_number_archive = #{existNumberArchive,jdbcType=INTEGER},
      storeroom_area = #{storeroomArea,jdbcType=DECIMAL},
      storeman_count = #{storemanCount,jdbcType=INTEGER},
      leader_name = #{leaderName,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      work_start_time = #{workStartTime,jdbcType=VARCHAR},
      cultural_relic_count = #{culturalRelicCount,jdbcType=INTEGER},
      collection_count = #{collectionCount,jdbcType=INTEGER},
      one_level_cultural_relic = #{oneLevelCulturalRelic,jdbcType=INTEGER},
      second_level_cultural_relic = #{secondLevelCulturalRelic,jdbcType=INTEGER},
      three_level_cultural_relic = #{threeLevelCulturalRelic,jdbcType=INTEGER},
      commonly_cultural_relic = #{commonlyCulturalRelic,jdbcType=INTEGER},
      no_grade_cultural_relic = #{noGradeCulturalRelic,jdbcType=INTEGER},
      one_level_collection = #{oneLevelCollection,jdbcType=INTEGER},
      second_level_collection = #{secondLevelCollection,jdbcType=INTEGER},
      three_level_collection = #{threeLevelCollection,jdbcType=INTEGER},
      commonly_collection = #{commonlyCollection,jdbcType=INTEGER},
      no_grade_collection = #{noGradeCollection,jdbcType=INTEGER},
      natural_collection = #{naturalCollection,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      delete_mark = #{deleteMark,jdbcType=VARCHAR},
      spare_data1 = #{spareData1,jdbcType=VARCHAR},
      spare_data2 = #{spareData2,jdbcType=VARCHAR},
      spare_data3 = #{spareData3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectRelicsUnitById" resultMap="BaseResultMap">
        select t.* from  cultural_org_info t
        where t.org_id = #{orgId} and t.delete_mark = #{level} limit 1
        
  </select>
  <delete id="deleteBase">
    delete from cultural_org_info 
    where org_id = #{orgId} and delete_mark = #{level}
  </delete>
</mapper>