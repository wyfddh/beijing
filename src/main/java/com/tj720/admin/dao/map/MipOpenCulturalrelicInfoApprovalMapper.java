package com.tj720.admin.dao.map;

import com.tj720.admin.model.MipOpenCulturalrelicInfoApproval;
import com.tj720.admin.model.MipOpenCulturalrelicInfoApprovalExample;
import com.tj720.admin.model.MipOpenFossilInfo;
import com.tj720.mip.model.MipOpenCollectionInfo;
import com.tj720.admin.model.MipOpenCulturalrelicInfo;

import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface MipOpenCulturalrelicInfoApprovalMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    long countByExample(MipOpenCulturalrelicInfoApprovalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int deleteByExample(MipOpenCulturalrelicInfoApprovalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int insert(MipOpenCulturalrelicInfoApproval record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int insertSelective(MipOpenCulturalrelicInfoApproval record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    List<MipOpenCulturalrelicInfoApproval> selectByExample(MipOpenCulturalrelicInfoApprovalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    MipOpenCulturalrelicInfoApproval selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int updateByExampleSelective(@Param("record") MipOpenCulturalrelicInfoApproval record, @Param("example") MipOpenCulturalrelicInfoApprovalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int updateByExample(@Param("record") MipOpenCulturalrelicInfoApproval record, @Param("example") MipOpenCulturalrelicInfoApprovalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int updateByPrimaryKeySelective(MipOpenCulturalrelicInfoApproval record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_approval
     *
     * @mbg.generated Thu Jan 03 11:02:32 CST 2019
     */
    int updateByPrimaryKey(MipOpenCulturalrelicInfoApproval record);
    
    int countApprovalInfoDetail(@Param("id") String id);
    
    int countApprovalInfoDetail4OpenFossil(@Param("id") String id);
    
    List<MipOpenCulturalrelicInfo> getApprovalInfoDetail(@Param("id") String id,@Param("startRow")int startRow, @Param("pageSize") Integer pageSize);

    List<MipOpenCulturalrelicInfo> getApprovalInfoDetailNoPage(@Param("id") String id);
    
    List<MipOpenFossilInfo> getApprovalInfoDetail4OpenFossil(@Param("id") String id,@Param("startRow")int startRow, @Param("pageSize") Integer pageSize);
    
    List<MipOpenFossilInfo> getApprovalInfoDetail4OpenFossilNoPage(@Param("id") String id);
    
    List<MipOpenCulturalrelicInfoApproval> getApprovalInfoList(@Param("applyDept") String applyDept,@Param("status") int status,@Param("startRow")int startRow, @Param("pageSize") Integer pageSize);
    
    int countApprovalInfoList(@Param("applyDept") String applyDept,@Param("status") int status);
    
    int countOpenInfoList(@Param("applyDept") String applyDept);
    
    List<MipOpenCollectionInfo> getOpenInfoList(@Param("applyDept") String applyDept,@Param("startRow")int startRow, @Param("pageSize") Integer pageSize);

    int remove4OpenInfo(@Param("id") String id);
    
    int update4CollectionInfo(HashMap<String,Object> condition);
    
    int update4OpenFossilInfo(HashMap<String,Object> condition);
    
    String getOrgNameById(@Param("orgId") String orgId);
    
    com.tj720.admin.model.MipOpenCollectionInfo getOpenDetail(@Param("id") String id );
}