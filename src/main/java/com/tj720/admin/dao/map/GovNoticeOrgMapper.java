package com.tj720.admin.dao.map;

import com.tj720.admin.dto.MipUserDto;
import com.tj720.admin.dto.ReceiveNoticeDetailDto;
import com.tj720.admin.dto.ReceiveNoticeDto;
import com.tj720.admin.model.GovNoticeOrg;
import com.tj720.admin.model.GovNoticeOrgExample;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

public interface GovNoticeOrgMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int countByExample(GovNoticeOrgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int deleteByExample(GovNoticeOrgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int insert(GovNoticeOrg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int insertSelective(GovNoticeOrg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    List<GovNoticeOrg> selectByExample(GovNoticeOrgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    GovNoticeOrg selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int updateByExampleSelective(@Param("record") GovNoticeOrg record, @Param("example") GovNoticeOrgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int updateByExample(@Param("record") GovNoticeOrg record, @Param("example") GovNoticeOrgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int updateByPrimaryKeySelective(GovNoticeOrg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gov_notice_org
     *
     * @mbggenerated Mon Jul 02 15:29:53 CST 2018
     */
    int updateByPrimaryKey(GovNoticeOrg record);
    

	List<MipUserDto> getUsers(@Param("userOrg")String userOrg, @Param("role")String role);

	List<ReceiveNoticeDto> getList(@Param("userId")String userId, @Param("userOrg")String userOrg, @Param("key")String key,
			@Param("startTime")String startTime, @Param("endTime")String endTime, @Param("isFeedBack")String isFeedBack,
			@Param("publishOrg")String publishOrg,@Param("receiveStatus")String receiveStatus,@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
	
	int countList(@Param("userId")String userId, @Param("userOrg")String userOrg, @Param("key")String key,
			@Param("startTime")String startTime, @Param("endTime")String endTime, @Param("isFeedBack")String isFeedBack,
			@Param("publishOrg")String publishOrg,@Param("receiveStatus")String receiveStatus);

	void changeStatus(@Param("id")String id, @Param("receiveStatus")String receiveStatus, @Param("viewTime")Date viewTime, @Param("writeTime")Date writeTime, @Param("reportId") String reportId);

	void changeReceiver(@Param("id")String id, @Param("receiver")String receiver);
    
	/**
	 * 批量保存
	 * @param list
	 * @return
	 */
	int insertByBatch(@Param("list") List<GovNoticeOrg> list);

	ReceiveNoticeDetailDto getDetail(String id);
	
	/**
	 * 阅读或者填报统计
	 * @param noticeList
	 * @return
	 */
	List<Map<String, String>> getViewStatic(@Param("list") List<String> noticeList);
	
	List<ReceiveNoticeDto> selectReceiveConditionList(@Param("noticeId")String noticeId, @Param("key")String key, @Param("lookStatus")String lookStatus, @Param("writeStatus")String writeStatus,
			@Param("startRow") int startRow,@Param("pageSize") Integer pageSize);
	
	int countReceiveConditionList(@Param("noticeId")String noticeId, @Param("key")String key, @Param("lookStatus")String lookStatus, @Param("writeStatus")String writeStatus);
	
	/**
	 * 根据机构id查询接收人，返回userid
	 * @param userOrg
	 * @return
	 */
	List<String> getReceiverByOrgids(@Param("list")String[] orgs);
	
	/**
	 * 根据通知公告id、指定机构id查询转发接收人不为空的数据
	 * @param orgs
	 * @param noticeId
	 * @return
	 */
	List<String> getForwardByOrgids(@Param("list")String[] orgs, @Param("noticeId")String noticeId);
    
	/**
	 * 博物馆工作台通知公告列表
	 * @param orgId
	 * @return
	 */
	List<ReceiveNoticeDto> getNoticeListForDesk(@Param("orgId")String orgId);
	
	List<GovNoticeOrg> getListByNoticeId(@Param("noticeId")String noticeId);
}