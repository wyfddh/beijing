package com.tj720.admin.dao.map;

import com.tj720.admin.model.MipOpenCulturalrelicInfoStatic;
import com.tj720.admin.model.MipOpenCulturalrelicInfoStaticExample;
import com.tj720.admin.model.MipOpenCulturalrelicInfoStaticWithBLOBs;

import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface MipOpenCulturalrelicInfoStaticMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    long countByExample(MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int deleteByExample(MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int insert(MipOpenCulturalrelicInfoStaticWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int insertSelective(MipOpenCulturalrelicInfoStaticWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    List<MipOpenCulturalrelicInfoStaticWithBLOBs> selectByExampleWithBLOBs(MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    List<MipOpenCulturalrelicInfoStatic> selectByExample(MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int updateByExampleSelective(@Param("record") MipOpenCulturalrelicInfoStaticWithBLOBs record, @Param("example") MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int updateByExampleWithBLOBs(@Param("record") MipOpenCulturalrelicInfoStaticWithBLOBs record, @Param("example") MipOpenCulturalrelicInfoStaticExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mip_open_culturalrelic_info_static
     *
     * @mbg.generated Tue Jan 08 09:03:39 CST 2019
     */
    int updateByExample(@Param("record") MipOpenCulturalrelicInfoStatic record, @Param("example") MipOpenCulturalrelicInfoStaticExample example);
    
    int countStaticData(HashMap<String,Object> condition);
    /**
     * 查询静态数据
     * @param condition
     * @return
     */
    List<MipOpenCulturalrelicInfoStatic> getStaticData(HashMap<String,Object> condition);
    
    MipOpenCulturalrelicInfoStatic getDetail(@Param("id") String id);
}